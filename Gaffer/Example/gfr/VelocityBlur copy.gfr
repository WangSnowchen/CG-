import Gaffer
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 12, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["VelocityBlur3"] = Gaffer.Box( "VelocityBlur3" )
parent.addChild( __children["VelocityBlur3"] )
__children["VelocityBlur3"].addChild( GafferOSL.OSLObject( "OSLObject" ) )
__children["VelocityBlur3"]["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "", GafferOSL.ClosurePlug( "value", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "legacyClosure", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["VelocityBlur3"]["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "P", Gaffer.V3fPlug( "value", defaultValue = imath.V3f( 0, 0, 0 ), interpretation = IECore.GeometricData.Interpretation.Point ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["VelocityBlur3"]["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( GafferOSL.OSLCode( "OSLCode" ) )
__children["VelocityBlur3"]["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "frame", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"]["OSLCode"]["out"].addChild( Gaffer.V3fPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["VelocityBlur3"]["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( Gaffer.Expression( "Expression1" ) )
__children["VelocityBlur3"]["Expression1"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"]["Expression1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["VelocityBlur3"]["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["VelocityBlur3"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( Gaffer.Switch( "SceneSwitch" ) )
__children["VelocityBlur3"]["SceneSwitch"].setup( GafferScene.ScenePlug( "in", ) )
__children["VelocityBlur3"]["SceneSwitch"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"]["SceneSwitch"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"]["SceneSwitch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["VelocityBlur3"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["VelocityBlur3"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( GafferScene.ResamplePrimitiveVariables( "ResamplePrimitiveVariables" ) )
__children["VelocityBlur3"]["ResamplePrimitiveVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( Gaffer.BoxIn( "BoxIn2" ) )
__children["VelocityBlur3"]["BoxIn2"].setup( GafferScene.FilterPlug( "out", defaultValue = 0, minValue = 0, maxValue = 7, ) )
__children["VelocityBlur3"]["BoxIn2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( GafferScene.FilterPlug( "in1", defaultValue = 0, minValue = 0, maxValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( GafferScene.StandardAttributes( "StandardAttributes3" ) )
__children["VelocityBlur3"]["StandardAttributes3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( Gaffer.StringPlug( "names", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( GafferOSL.OSLShader( "InVector" ) )
__children["VelocityBlur3"]["InVector"].loadShader( "ObjectProcessing/InVector" )
__children["VelocityBlur3"]["InVector"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"].addChild( GafferOSL.OSLObject( "OSLObject1" ) )
__children["VelocityBlur3"]["OSLObject1"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "", GafferOSL.ClosurePlug( "value", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "legacyClosure", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["VelocityBlur3"]["OSLObject1"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "velocity", Gaffer.V3fPlug( "value", defaultValue = imath.V3f( 0, 0, 0 ), interpretation = IECore.GeometricData.Interpretation.Vector ), True, "primitiveVariable1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["VelocityBlur3"]["OSLObject1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VelocityBlur3"]["OSLObject"]["in"].setInput( __children["VelocityBlur3"]["ResamplePrimitiveVariables"]["out"] )
__children["VelocityBlur3"]["OSLObject"]["filter"].setInput( __children["VelocityBlur3"]["BoxIn2"]["out"] )
__children["VelocityBlur3"]["OSLObject"]["useAttributes"].setValue( True )
__children["VelocityBlur3"]["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["VelocityBlur3"]["OSLCode"]["out"]["out"] )
__children["VelocityBlur3"]["OSLObject"]["__uiPosition"].setValue( imath.V2f( 12.8731098, -14.9761562 ) )
__children["VelocityBlur3"]["OSLCode"]["parameters"]["frame"].setInput( __children["VelocityBlur3"]["Expression1"]["__out"]["p0"] )
__children["VelocityBlur3"]["OSLCode"]["code"].setValue( 'vector velocity;\ngetattribute( "velocity", velocity );\n\nout = P + velocity * ( frame - round( frame ) );' )
__children["VelocityBlur3"]["OSLCode"]["__uiPosition"].setValue( imath.V2f( -32.219471, -15.5761566 ) )
__children["VelocityBlur3"]["Expression1"]["__uiPosition"].setValue( imath.V2f( -42.9232521, -15.5753155 ) )
__children["VelocityBlur3"]["BoxIn"]["__in"].setInput( __children["VelocityBlur3"]["in"] )
Gaffer.Metadata.registerValue( __children["VelocityBlur3"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
__children["VelocityBlur3"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 8.12674809, 24.8123245 ) )
__children["VelocityBlur3"]["SceneSwitch"]["index"].setValue( 1 )
__children["VelocityBlur3"]["SceneSwitch"]["enabled"].setInput( __children["VelocityBlur3"]["enabled"] )
__children["VelocityBlur3"]["SceneSwitch"]["in"][0].setInput( __children["VelocityBlur3"]["BoxIn"]["out"] )
__children["VelocityBlur3"]["SceneSwitch"]["in"][1].setInput( __children["VelocityBlur3"]["OSLObject"]["out"] )
__children["VelocityBlur3"]["SceneSwitch"]["__uiPosition"].setValue( imath.V2f( 11.1267481, -23.3081894 ) )
__children["VelocityBlur3"]["BoxOut"]["in"].setInput( __children["VelocityBlur3"]["SceneSwitch"]["out"] )
Gaffer.Metadata.registerValue( __children["VelocityBlur3"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
__children["VelocityBlur3"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 12.6267204, -31.6402206 ) )
__children["VelocityBlur3"]["out"].setInput( __children["VelocityBlur3"]["BoxOut"]["__out"] )
__children["VelocityBlur3"]["__uiPosition"].setValue( imath.V2f( 40.4938965, 18.7155647 ) )
__children["VelocityBlur3"]["ResamplePrimitiveVariables"]["in"].setInput( __children["VelocityBlur3"]["OSLObject1"]["out"] )
__children["VelocityBlur3"]["ResamplePrimitiveVariables"]["filter"].setInput( __children["VelocityBlur3"]["BoxIn2"]["out"] )
__children["VelocityBlur3"]["ResamplePrimitiveVariables"]["names"].setInput( __children["VelocityBlur3"]["names"] )
__children["VelocityBlur3"]["ResamplePrimitiveVariables"]["__uiPosition"].setValue( imath.V2f( 12.8731098, -4.3925581 ) )
__children["VelocityBlur3"]["BoxIn2"]["name"].setValue( 'in1' )
__children["VelocityBlur3"]["BoxIn2"]["__in"].setInput( __children["VelocityBlur3"]["in1"] )
Gaffer.Metadata.registerValue( __children["VelocityBlur3"]["BoxIn2"]["__in"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["VelocityBlur3"]["BoxIn2"]["__in"], 'description', 'The result of the filter. This should be connected into\nthe "filter" plug of a FilteredSceneProcessor.' )
Gaffer.Metadata.registerValue( __children["VelocityBlur3"]["BoxIn2"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["VelocityBlur3"]["BoxIn2"]["out"], 'noduleLayout:section', 'left' )
__children["VelocityBlur3"]["BoxIn2"]["__uiPosition"].setValue( imath.V2f( 39.0667953, 18.7654819 ) )
Gaffer.Metadata.registerValue( __children["VelocityBlur3"]["in1"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["VelocityBlur3"]["in1"], 'description', 'The result of the filter. This should be connected into\nthe "filter" plug of a FilteredSceneProcessor.' )
Gaffer.Metadata.registerValue( __children["VelocityBlur3"]["in1"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["VelocityBlur3"]["in1"], 'noduleLayout:section', 'right' )
__children["VelocityBlur3"]["StandardAttributes3"]["enabled"].setValue( False )
__children["VelocityBlur3"]["StandardAttributes3"]["in"].setInput( __children["VelocityBlur3"]["BoxIn"]["out"] )
__children["VelocityBlur3"]["StandardAttributes3"]["filter"].setInput( __children["VelocityBlur3"]["BoxIn2"]["out"] )
__children["VelocityBlur3"]["StandardAttributes3"]["attributes"]["transformBlur"]["enabled"].setValue( True )
__children["VelocityBlur3"]["StandardAttributes3"]["attributes"]["deformationBlur"]["enabled"].setValue( True )
__children["VelocityBlur3"]["StandardAttributes3"]["__uiPosition"].setValue( imath.V2f( 12.8731108, 15.6548347 ) )
__children["VelocityBlur3"]["names"].setValue( 'velocity' )
Gaffer.Metadata.registerValue( __children["VelocityBlur3"]["names"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["VelocityBlur3"]["names"], 'description', "The names of the primitive variables to be affected.\nNames should be separated by spaces, and Gaffer's\nstandard wildcard characters may be used." )
__children["VelocityBlur3"]["InVector"]["parameters"]["name"].setInput( __children["VelocityBlur3"]["ResamplePrimitiveVariables"]["names"] )
__children["VelocityBlur3"]["InVector"]["__uiPosition"].setValue( imath.V2f( -6.13360405, 4.9114666 ) )
__children["VelocityBlur3"]["OSLObject1"]["in"].setInput( __children["VelocityBlur3"]["StandardAttributes3"]["out"] )
__children["VelocityBlur3"]["OSLObject1"]["filter"].setInput( __children["VelocityBlur3"]["BoxIn2"]["out"] )
__children["VelocityBlur3"]["OSLObject1"]["useAttributes"].setValue( True )
__children["VelocityBlur3"]["OSLObject1"]["primitiveVariables"]["primitiveVariable1"]["value"].setInput( __children["VelocityBlur3"]["InVector"]["out"]["value"] )
__children["VelocityBlur3"]["OSLObject1"]["__uiPosition"].setValue( imath.V2f( 12.8731108, 5.51146746 ) )
__children["VelocityBlur3"]["Expression1"]["__engine"].setValue( 'OSL' )
__children["VelocityBlur3"]["Expression1"]["__expression"].setValue( 'parent.__out.p0 = context( "frame", 0.0 );' )


del __children

