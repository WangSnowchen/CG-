import Gaffer
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 15, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["PrimitiveVariables"] = GafferScene.PrimitiveVariables( "PrimitiveVariables" )
parent.addChild( __children["PrimitiveVariables"] )
__children["PrimitiveVariables"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["PrimitiveVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PrimitiveVariableQuery"] = GafferScene.PrimitiveVariableQuery( "PrimitiveVariableQuery" )
parent.addChild( __children["PrimitiveVariableQuery"] )
__children["PrimitiveVariableQuery"].addQuery( Gaffer.Color3fVectorDataPlug( "value", defaultValue = IECore.Color3fVectorData( [  ] ), ) )
__children["PrimitiveVariableQuery"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere1"] = GafferScene.Sphere( "Sphere1" )
parent.addChild( __children["Sphere1"] )
__children["Sphere1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PrimitiveVariables2"] = GafferScene.PrimitiveVariables( "PrimitiveVariables2" )
parent.addChild( __children["PrimitiveVariables2"] )
__children["PrimitiveVariables2"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fVectorDataPlug( "value", defaultValue = IECore.Color3fVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["PrimitiveVariables2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( Gaffer.Color3fVectorDataPlug( "p0", defaultValue = IECore.Color3fVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.Color3fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PrimitiveVariables"]["in"].setInput( __children["PrimitiveVariables2"]["out"] )
__children["PrimitiveVariables"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["PrimitiveVariables"]["primitiveVariables"]["member1"]["name"].setValue( 'user:testVariable' )
__children["PrimitiveVariables"]["primitiveVariables"]["member1"]["value"].setInput( __children["Expression"]["__out"]["p0"] )
__children["PrimitiveVariables"]["__uiPosition"].setValue( imath.V2f( 248.818741, 78.0022583 ) )
__children["PrimitiveVariableQuery"]["scene"].setInput( __children["PrimitiveVariables2"]["out"] )
__children["PrimitiveVariableQuery"]["location"].setValue( '${scene:path}' )
__children["PrimitiveVariableQuery"]["queries"][0]["name"].setValue( 'testVariable' )
__children["PrimitiveVariableQuery"]["__uiPosition"].setValue( imath.V2f( 238.373047, 91.0214615 ) )
__children["Sphere1"]["__uiPosition"].setValue( imath.V2f( 246.559891, 121.834114 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 282.210968, 101.419884 ) )
__children["PrimitiveVariables2"]["in"].setInput( __children["Sphere1"]["out"] )
__children["PrimitiveVariables2"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["PrimitiveVariables2"]["primitiveVariables"]["member1"]["name"].setValue( 'testVariable' )
__children["PrimitiveVariables2"]["primitiveVariables"]["member1"]["value"].setValue( IECore.Color3fVectorData( [ imath.Color3f( 0.300000012, 0.400000006, 0.5 ) ] ) )
__children["PrimitiveVariables2"]["__uiPosition"].setValue( imath.V2f( 246.559891, 113.670052 ) )
__children["Expression"]["__in"]["p0"].setInput( __children["PrimitiveVariableQuery"]["out"][0]["value"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( 238.347885, 84.4571152 ) )
__children["Backdrop"]["title"].setValue( 'Create Test Data' )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( 246.559891, 117.752083 ) )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -9.92919922, -9.1640625 ), imath.V2f( 15.9291992, 15.1640625 ) ) )
__children["Backdrop1"]["title"].setValue( 'Convert Const Color Vector To Const Color' )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( 242.891052, 84.5118561 ) )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -15.5287552, -11.5916328 ), imath.V2f( 21.5287552, 17.5916328 ) ) )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'import imath\n\narrayValue = parent["__in"]["p0"]\nparent["__out"]["p0"] = arrayValue[0] if len( arrayValue ) else imath.Color3f( 1, 0, 0 )' )


del __children