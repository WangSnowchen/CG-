import Gaffer
import GafferArnold
import GafferDispatch
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 6, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Sphere"] = GafferScene.Sphere( "Sphere" )
parent.addChild( __children["Sphere"] )
__children["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"] = GafferScene.Parent( "Parent" )
parent.addChild( __children["Parent"] )
__children["Parent"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"]["children"].addChild( GafferScene.ScenePlug( "child2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"]["children"].addChild( GafferScene.ScenePlug( "child3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"]["children"].addChild( GafferScene.ScenePlug( "child4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"]["children"].addChild( GafferScene.ScenePlug( "child5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["QuadLight"] = GafferArnold.ArnoldLight( "QuadLight" )
parent.addChild( __children["QuadLight"] )
__children["QuadLight"].loadShader( "quad_light" )
__children["QuadLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ArnoldRender"] = GafferArnold.ArnoldRender( "ArnoldRender" )
parent.addChild( __children["ArnoldRender"] )
__children["ArnoldRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["QuadLight1"] = GafferArnold.ArnoldLight( "QuadLight1" )
parent.addChild( __children["QuadLight1"] )
__children["QuadLight1"].loadShader( "quad_light" )
__children["QuadLight1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Image"] = GafferArnold.ArnoldShader( "Image" )
parent.addChild( __children["Image"] )
__children["Image"].loadShader( "image" )
__children["Image"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SkydomeLight"] = GafferArnold.ArnoldLight( "SkydomeLight" )
parent.addChild( __children["SkydomeLight"] )
__children["SkydomeLight"].loadShader( "skydome_light" )
__children["SkydomeLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ArnoldOptions"] = GafferArnold.ArnoldOptions( "ArnoldOptions" )
parent.addChild( __children["ArnoldOptions"] )
__children["ArnoldOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["ImageWriter_Merged"] = GafferImage.ImageWriter( "ImageWriter_Merged" )
parent.addChild( __children["ImageWriter_Merged"] )
__children["ImageWriter_Merged"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter_Merged"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["QuadLight2"] = GafferArnold.ArnoldLight( "QuadLight2" )
parent.addChild( __children["QuadLight2"] )
__children["QuadLight2"].loadShader( "quad_light" )
__children["QuadLight2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cryptomatte"] = GafferArnold.ArnoldShader( "Cryptomatte" )
parent.addChild( __children["Cryptomatte"] )
__children["Cryptomatte"].loadShader( "cryptomatte" )
__children["Cryptomatte"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ArnoldAOVShader"] = GafferArnold.ArnoldAOVShader( "ArnoldAOVShader" )
parent.addChild( __children["ArnoldAOVShader"] )
__children["ArnoldAOVShader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent1"] = GafferScene.Parent( "Parent1" )
parent.addChild( __children["Parent1"] )
__children["Parent1"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment"] = GafferScene.ShaderAssignment( "ShaderAssignment" )
parent.addChild( __children["ShaderAssignment"] )
__children["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardSurface"] = GafferArnold.ArnoldShader( "StandardSurface" )
parent.addChild( __children["StandardSurface"] )
__children["StandardSurface"].loadShader( "standard_surface" )
__children["StandardSurface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment1"] = GafferScene.ShaderAssignment( "ShaderAssignment1" )
parent.addChild( __children["ShaderAssignment1"] )
__children["ShaderAssignment1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardSurface1"] = GafferArnold.ArnoldShader( "StandardSurface1" )
parent.addChild( __children["StandardSurface1"] )
__children["StandardSurface1"].loadShader( "standard_surface" )
__children["StandardSurface1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spreadsheet"] = Gaffer.Spreadsheet( "Spreadsheet" )
parent.addChild( __children["Spreadsheet"] )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.StringPlug( "dataType", defaultValue = 'half', ) )
__children["Spreadsheet"]["rows"].addRows( 1 )
__children["Spreadsheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader_Merged"] = GafferImage.ImageReader( "ImageReader_Merged" )
parent.addChild( __children["ImageReader_Merged"] )
__children["ImageReader_Merged"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cryptomatte_Material"] = GafferScene.Cryptomatte( "Cryptomatte_Material" )
parent.addChild( __children["Cryptomatte_Material"] )
__children["Cryptomatte_Material"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InspectMetadata"] = Gaffer.Box( "InspectMetadata" )
parent.addChild( __children["InspectMetadata"] )
__children["InspectMetadata"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InspectMetadata"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["InspectMetadata"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["InspectMetadata"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InspectMetadata"].addChild( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InspectMetadata"].addChild( Gaffer.StringPlug( "metadata", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InspectMetadata"].addChild( Gaffer.Expression( "Expression" ) )
__children["InspectMetadata"]["Expression"]["__in"].addChild( Gaffer.AtomicCompoundDataPlug( "p0", defaultValue = IECore.CompoundData(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InspectMetadata"]["Expression"]["__in"].addChild( Gaffer.StringPlug( "p1", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InspectMetadata"]["Expression"]["__in"].addChild( Gaffer.StringPlug( "p2", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InspectMetadata"]["Expression"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InspectMetadata"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InspectMetadata"].addChild( Gaffer.StringPlug( "filter", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InspectMetadata"].addChild( Gaffer.StringPlug( "template", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cryptomatte_Object"] = GafferScene.Cryptomatte( "Cryptomatte_Object" )
parent.addChild( __children["Cryptomatte_Object"] )
__children["Cryptomatte_Object"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SystemCommand_Noice"] = GafferDispatch.SystemCommand( "SystemCommand_Noice" )
parent.addChild( __children["SystemCommand_Noice"] )
__children["SystemCommand_Noice"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SystemCommand_Noice"]["substitutions"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["SystemCommand_Noice"]["substitutions"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["SystemCommand_Noice"]["substitutions"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member3", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["SystemCommand_Noice"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader_Noice"] = GafferImage.ImageReader( "ImageReader_Noice" )
parent.addChild( __children["ImageReader_Noice"] )
__children["ImageReader_Noice"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"] = GafferScene.Outputs( "BatchOutputs" )
parent.addChild( __children["BatchOutputs"] )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output5"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output5"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output5"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output5"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output6"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output6"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output6"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output6"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output6"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output6"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"]["output6"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output7", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output7"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output7"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output7"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output7"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output7"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output7"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"]["output7"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output8", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output8"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output8"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output8"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output8"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output8"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output8"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output8"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output9", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output9"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output9"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output9"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output9"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output9"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output9"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"]["output9"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output10", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output10"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output10"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output10"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output10"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output10"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output10"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output10"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output11", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output11"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output11"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output11"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output11"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output11"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output11"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output11"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output12", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output12"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output12"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output12"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output12"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output12"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output12"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"]["output12"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output13", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output13"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output13"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output13"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output13"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output13"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output13"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"]["output13"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output14", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output14"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output14"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output14"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output14"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output14"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output14"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"]["output14"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output15", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output15"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output15"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output15"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output15"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output15"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output15"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"]["output15"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"].addChild( Gaffer.ValuePlug( "output16", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output16"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output16"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output16"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output16"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output16"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output16"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BatchOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "layerPerLightGroup", Gaffer.BoolPlug( "value", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "layerPerLightGroup", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"]["outputs"]["output16"]["parameters"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["BatchOutputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CollectImages"] = GafferImage.CollectImages( "CollectImages" )
parent.addChild( __children["CollectImages"] )
__children["CollectImages"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader"] = GafferImage.ImageReader( "ImageReader" )
parent.addChild( __children["ImageReader"] )
__children["ImageReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 37227 )
parent["variables"]["member1"]["name"].setValue( 'foo' )
parent["variables"]["member1"]["value"].setValue( 'bar' )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Sphere"]["__uiPosition"].setValue( imath.V2f( -23.8000031, 34.3348427 ) )
__children["Camera"]["transform"]["translate"].setValue( imath.V3f( 0, 0, 3.2082231 ) )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( -37.6610909, 3.04999924 ) )
__children["Parent"]["in"].setInput( __children["Camera"]["out"] )
__children["Parent"]["parent"].setValue( '/' )
__children["Parent"]["children"][0].setInput( __children["Parent1"]["out"] )
__children["Parent"]["children"][1].setInput( __children["QuadLight"]["out"] )
__children["Parent"]["children"][2].setInput( __children["QuadLight1"]["out"] )
__children["Parent"]["children"][3].setInput( __children["SkydomeLight"]["out"] )
__children["Parent"]["children"][4].setInput( __children["QuadLight2"]["out"] )
__children["Parent"]["__uiPosition"].setValue( imath.V2f( -19.3000031, -5.11406326 ) )
__children["QuadLight"]["name"].setValue( 'quadLight' )
__children["QuadLight"]["transform"]["translate"].setValue( imath.V3f( -2.22536182, 2.28940964, 2.07884181e-08 ) )
__children["QuadLight"]["transform"]["rotate"].setValue( imath.V3f( -61.2384796, 256.835419, 11.7959776 ) )
__children["QuadLight"]["parameters"]["exposure"].setValue( 5.0 )
__children["QuadLight"]["parameters"]["aov"].setValue( 'left' )
__children["QuadLight"]["__uiPosition"].setValue( imath.V2f( -8.49364185, 6.40314436 ) )
__children["ArnoldRender"]["in"].setInput( __children["BatchOutputs"]["out"] )
__children["ArnoldRender"]["fileName"].setValue( '${project:rootDirectory}/asses/${script:name}/${script:name}.####.ass' )
__children["ArnoldRender"]["__uiPosition"].setValue( imath.V2f( -20.8000011, -44.8843193 ) )
__children["QuadLight1"]["name"].setValue( 'quadLight' )
__children["QuadLight1"]["transform"]["translate"].setValue( imath.V3f( 3.44986057, 2.28940988, 0 ) )
__children["QuadLight1"]["transform"]["rotate"].setValue( imath.V3f( 0, 103.712212, 32.5085144 ) )
__children["QuadLight1"]["parameters"]["exposure"].setValue( 5.0 )
__children["QuadLight1"]["parameters"]["aov"].setValue( 'right' )
__children["QuadLight1"]["__uiPosition"].setValue( imath.V2f( 4.76512527, 6.23378563 ) )
__children["Image"]["parameters"]["filename"].setValue( '${GAFFER_ROOT}/resources/hdri/studio.exr' )
__children["Image"]["__uiPosition"].setValue( imath.V2f( 16.3914967, 6.58001232 ) )
__children["SkydomeLight"]["name"].setValue( 'skydomeLight' )
__children["SkydomeLight"]["parameters"]["color"].setInput( __children["Image"]["out"] )
__children["SkydomeLight"]["parameters"]["aov"].setValue( 'env' )
__children["SkydomeLight"]["parameters"]["format"].setValue( 'latlong' )
__children["SkydomeLight"]["__uiPosition"].setValue( imath.V2f( 29.0628853, 5.97916508 ) )
__children["ArnoldOptions"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["ArnoldOptions"]["options"]["aaSamples"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logInfo"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logWarnings"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logErrors"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logDebug"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logAssParse"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logPlugins"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logProgress"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logNAN"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logTimestamp"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logStats"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logBacktrace"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logMemory"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["logColor"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleInfo"]["value"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleInfo"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleWarnings"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleErrors"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleDebug"]["value"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleDebug"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleAssParse"]["value"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleAssParse"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consolePlugins"]["value"].setValue( True )
__children["ArnoldOptions"]["options"]["consolePlugins"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleProgress"]["value"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleProgress"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleNAN"]["value"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleNAN"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleTimestamp"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleStats"]["value"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleStats"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleBacktrace"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleMemory"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleColor"]["enabled"].setValue( True )
__children["ArnoldOptions"]["__uiPosition"].setValue( imath.V2f( -19.3000031, -28.5561943 ) )
__children["StandardOptions"]["in"].setInput( __children["ArnoldAOVShader"]["out"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( -19.3000031, -20.3921318 ) )
__children["openColorIO"]["displayTransform"].setValue( 'sRGB - Display/ACES 1.0 - SDR Video' )
__children["ImageWriter_Merged"]["preTasks"][0].setInput( __children["ArnoldRender"]["task"] )
__children["ImageWriter_Merged"]["in"].setInput( __children["CollectImages"]["out"] )
__children["ImageWriter_Merged"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/merged.####.exr' )
__children["ImageWriter_Merged"]["layout"]["partName"].setValue( '' )
__children["ImageWriter_Merged"]["layout"]["channelName"].setValue( '${imageWriter:layerName}.${imageWriter:singlePartViewName}.${imageWriter:baseName}' )
__children["ImageWriter_Merged"]["openexr"]["dataType"].setInput( __children["Spreadsheet"]["out"]["dataType"] )
__children["ImageWriter_Merged"]["__uiPosition"].setValue( imath.V2f( -18.6000004, -61.2400818 ) )
__children["QuadLight2"]["name"].setValue( 'quadLight' )
__children["QuadLight2"]["transform"]["translate"].setValue( imath.V3f( 0.388819963, 2.28940988, -2.38629055 ) )
__children["QuadLight2"]["transform"]["rotate"].setValue( imath.V3f( -0.260945559, 156.837082, 86.0924454 ) )
__children["QuadLight2"]["parameters"]["color"].setValue( imath.Color3f( 0, 1, 1 ) )
__children["QuadLight2"]["parameters"]["exposure"].setValue( 5.0 )
__children["QuadLight2"]["parameters"]["aov"].setValue( '' )
__children["QuadLight2"]["__uiPosition"].setValue( imath.V2f( 44.3266563, 5.76362181 ) )
__children["Cryptomatte"]["__uiPosition"].setValue( imath.V2f( -34.8473701, -12.2280693 ) )
__children["ArnoldAOVShader"]["in"].setInput( __children["Parent"]["out"] )
__children["ArnoldAOVShader"]["shader"].setInput( __children["Cryptomatte"]["out"] )
__children["ArnoldAOVShader"]["__uiPosition"].setValue( imath.V2f( -19.300005, -12.2280693 ) )
__children["Plane"]["transform"]["translate"].setValue( imath.V3f( 0, -0.978464842, 0 ) )
__children["Plane"]["transform"]["rotate"].setValue( imath.V3f( -90, 0, 0 ) )
__children["Plane"]["transform"]["scale"].setValue( imath.V3f( 61.6358414, 61.6358414, 1 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( 10.3007011, 34.7600822 ) )
__children["Parent1"]["in"].setInput( __children["ShaderAssignment"]["out"] )
__children["Parent1"]["parent"].setValue( '/' )
__children["Parent1"]["children"][0].setInput( __children["Dot"]["out"] )
__children["Parent1"]["__uiPosition"].setValue( imath.V2f( -21.5500031, 11.6816816 ) )
__children["ShaderAssignment"]["in"].setInput( __children["Sphere"]["out"] )
__children["ShaderAssignment"]["shader"].setInput( __children["StandardSurface"]["out"] )
__children["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( -23.8000031, 26.0245209 ) )
__children["StandardSurface"]["parameters"]["base_color"].setValue( imath.Color3f( 0.178125009, 0.22265625, 0.178125024 ) )
Gaffer.Metadata.registerValue( __children["StandardSurface"]["parameters"]["base_color"], 'compoundNumericNodule:childrenVisible', True )
__children["StandardSurface"]["parameters"]["diffuse_roughness"].setValue( 0.5699999928474426 )
__children["StandardSurface"]["parameters"]["metalness"].setValue( 0.5600000023841858 )
__children["StandardSurface"]["__uiPosition"].setValue( imath.V2f( -40.1899948, 26.0245209 ) )
__children["Dot"]["in"].setInput( __children["ShaderAssignment1"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( 10.3007011, 19.0137119 ) )
__children["ShaderAssignment1"]["in"].setInput( __children["Plane"]["out"] )
__children["ShaderAssignment1"]["shader"].setInput( __children["StandardSurface1"]["out"] )
__children["ShaderAssignment1"]["__uiPosition"].setValue( imath.V2f( 10.3007011, 26.5960197 ) )
__children["StandardSurface1"]["parameters"]["base_color"].setValue( imath.Color3f( 0.178125009, 0.22265625, 0.377622366 ) )
Gaffer.Metadata.registerValue( __children["StandardSurface1"]["parameters"]["base_color"], 'compoundNumericNodule:childrenVisible', True )
__children["StandardSurface1"]["parameters"]["diffuse_roughness"].setValue( 0.5699999928474426 )
__children["StandardSurface1"]["parameters"]["metalness"].setValue( 0.5600000023841858 )
__children["StandardSurface1"]["__uiPosition"].setValue( imath.V2f( -6.9293766, 26.5960197 ) )
__children["Spreadsheet"]["selector"].setValue( '${imageWriter:channelName}' )
__children["Spreadsheet"]["rows"][1]["name"].setValue( 'crypto*' )
__children["Spreadsheet"]["rows"][1]["cells"]["dataType"]["value"].setValue( 'float' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["dataType"]["value"], 'ui:scene:acceptsSetName:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["dataType"]["value"], 'ui:scene:acceptsSetNames:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["dataType"]["value"], 'ui:scene:acceptsSetExpression:promotable', False )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["dataType"]["value"], 'description', 'The data type to be written to the OpenEXR file.  If you want to use different\ndata types for different channels, you can drive this with an expression or spreadsheet,\nwhich may use the same context variables as the layout plugs ( the useful ones are\n`${imageWriter:channelName}`, `${imageWriter:layerName}` and `${imageWriter:baseName}`,\nfor the whole channel name, and for the prefix and suffix respectively ).' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["dataType"]["value"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["dataType"]["value"], 'preset:Float', 'float' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["dataType"]["value"], 'preset:Half Float', 'half' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["dataType"]["value"], 'ui:spreadsheet:selectorValue', '${imageWriter:channelName}' )
__children["Spreadsheet"]["__uiPosition"].setValue( imath.V2f( -27.6345768, -61.3915443 ) )
__children["ImageReader_Merged"]["fileName"].setInput( __children["ImageWriter_Merged"]["fileName"] )
__children["ImageReader_Merged"]["refreshCount"].setValue( 6 )
__children["ImageReader_Merged"]["__uiPosition"].setValue( imath.V2f( 0.578961253, -61.0366745 ) )
__children["Cryptomatte_Material"]["in"].setInput( __children["ImageReader_Merged"]["out"] )
__children["Cryptomatte_Material"]["layer"].setValue( 'crypto_material' )
__children["Cryptomatte_Material"]["matteNames"].setValue( IECore.StringVectorData( [ '88a64e5d3248a3b6aec434830d091cd0' ] ) )
__children["Cryptomatte_Material"]["__uiPosition"].setValue( imath.V2f( 18.09375, -69.2007446 ) )
Gaffer.Metadata.registerValue( __children["InspectMetadata"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["InspectMetadata"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["InspectMetadata"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["InspectMetadata"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["InspectMetadata"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["InspectMetadata"], 'noduleLayout:customGadget:addButtonRight:visible', False )
__children["InspectMetadata"]["__uiPosition"].setValue( imath.V2f( 0.578961253, -69.3687439 ) )
__children["InspectMetadata"]["BoxIn"]["__in"].setInput( __children["InspectMetadata"]["in"] )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["BoxIn"]["__in"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["InspectMetadata"]["in"].setInput( __children["ImageReader_Merged"]["out"] )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["in"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["in"], 'layout:index', 0 )
__children["InspectMetadata"]["metadata"].setInput( __children["InspectMetadata"]["Expression"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["metadata"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["metadata"], 'plugValueWidget:type', 'GafferUI.MultiLineStringPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["metadata"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["metadata"], 'layout:index', 3 )
__children["InspectMetadata"]["Expression"]["__in"]["p0"].setInput( __children["InspectMetadata"]["BoxIn"]["out"]["metadata"] )
__children["InspectMetadata"]["Expression"]["__in"]["p1"].setInput( __children["InspectMetadata"]["filter"] )
__children["InspectMetadata"]["Expression"]["__in"]["p2"].setInput( __children["InspectMetadata"]["template"] )
__children["InspectMetadata"]["Expression"]["__uiPosition"].setValue( imath.V2f( -0.150000289, -6.19000006 ) )
__children["InspectMetadata"]["filter"].setValue( 'arnold/aovs* crypto*' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["filter"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["filter"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["filter"], 'layout:index', 1 )
__children["InspectMetadata"]["template"].setValue( '{key} : {value}' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["template"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["template"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["InspectMetadata"]["template"], 'layout:index', 2 )
__children["Cryptomatte_Object"]["in"].setInput( __children["ImageReader_Merged"]["out"] )
__children["Cryptomatte_Object"]["layer"].setValue( 'crypto_object' )
__children["Cryptomatte_Object"]["matteNames"].setValue( IECore.StringVectorData( [ 'sphere' ] ) )
__children["Cryptomatte_Object"]["__uiPosition"].setValue( imath.V2f( 35.3936844, -69.2007294 ) )
__children["SystemCommand_Noice"]["preTasks"][0].setInput( __children["ImageWriter_Merged"]["task"] )
__children["SystemCommand_Noice"]["command"].setValue( '${ARNOLD_ROOT}/bin/noice -i {input} -o {output} {aovArgs}' )
__children["SystemCommand_Noice"]["substitutions"]["member1"]["name"].setValue( 'input' )
__children["SystemCommand_Noice"]["substitutions"]["member2"]["name"].setValue( 'output' )
__children["SystemCommand_Noice"]["substitutions"]["member2"]["value"].setValue( '${project:rootDirectory}/renders/${script:name}/merged_denoise.####.exr' )
__children["SystemCommand_Noice"]["substitutions"]["member3"]["name"].setValue( 'aovArgs' )
__children["SystemCommand_Noice"]["substitutions"]["member3"]["value"].setValue( '-l RGBA_left -l RGBA_right -l RGBA_env -l RGBA_default -l diffuse -l specular' )
__children["SystemCommand_Noice"]["substitutions"]["member1"]["value"].setInput( __children["ImageWriter_Merged"]["fileName"] )
__children["SystemCommand_Noice"]["__uiPosition"].setValue( imath.V2f( -17.8999996, -69.4041901 ) )
__children["ImageReader_Noice"]["fileName"].setInput( __children["SystemCommand_Noice"]["substitutions"]["member2"]["value"] )
__children["ImageReader_Noice"]["refreshCount"].setValue( 11 )
__children["ImageReader_Noice"]["__uiPosition"].setValue( imath.V2f( -17.790535, -76.5402374 ) )
__children["BatchOutputs"]["in"].setInput( __children["ArnoldOptions"]["out"] )
__children["BatchOutputs"]["outputs"]["output1"]["name"].setValue( 'Batch/Arnold/Beauty' )
__children["BatchOutputs"]["outputs"]["output1"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/beauty/beauty.####.exr' )
__children["BatchOutputs"]["outputs"]["output1"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["BatchOutputs"]["outputs"]["output5"]["name"].setValue( 'Batch/Arnold/BeautyLightGroups' )
__children["BatchOutputs"]["outputs"]["output5"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/beautyLightGroups/beautyLightGroups.####.exr' )
__children["BatchOutputs"]["outputs"]["output5"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output5"]["data"].setValue( 'rgba' )
__children["BatchOutputs"]["outputs"]["output5"]["parameters"]["layerPerLightGroup"]["value"].setValue( True )
__children["BatchOutputs"]["outputs"]["output6"]["name"].setValue( 'Batch/Arnold/Beauty_Noice' )
__children["BatchOutputs"]["outputs"]["output6"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/beauty_noice/beauty_noice.####.exr' )
__children["BatchOutputs"]["outputs"]["output6"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output6"]["data"].setValue( 'rgba' )
__children["BatchOutputs"]["outputs"]["output6"]["parameters"]["member1"]["name"].setValue( 'layerName' )
__children["BatchOutputs"]["outputs"]["output6"]["parameters"]["member1"]["value"].setValue( 'RGBA_noice' )
__children["BatchOutputs"]["outputs"]["output6"]["parameters"]["member2"]["name"].setValue( 'filter' )
__children["BatchOutputs"]["outputs"]["output6"]["parameters"]["member2"]["value"].setValue( 'variance' )
__children["BatchOutputs"]["outputs"]["output7"]["name"].setValue( 'Batch/Arnold/BeautyLightGroups_Noice' )
__children["BatchOutputs"]["outputs"]["output7"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/beautyLightGroups_noice/beautyLightGroups_noice.####.exr' )
__children["BatchOutputs"]["outputs"]["output7"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output7"]["data"].setValue( 'rgba' )
__children["BatchOutputs"]["outputs"]["output7"]["parameters"]["layerPerLightGroup"]["value"].setValue( True )
__children["BatchOutputs"]["outputs"]["output7"]["parameters"]["member1"]["name"].setValue( 'filter' )
__children["BatchOutputs"]["outputs"]["output7"]["parameters"]["member1"]["value"].setValue( 'variance' )
__children["BatchOutputs"]["outputs"]["output7"]["parameters"]["member2"]["name"].setValue( 'layerName' )
__children["BatchOutputs"]["outputs"]["output7"]["parameters"]["member2"]["value"].setValue( 'RGBA_noice' )
__children["BatchOutputs"]["outputs"]["output8"]["name"].setValue( 'Batch/Arnold/N_Noice' )
__children["BatchOutputs"]["outputs"]["output8"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/N_noice/N_noice.####.exr' )
__children["BatchOutputs"]["outputs"]["output8"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output8"]["data"].setValue( 'vector N' )
__children["BatchOutputs"]["outputs"]["output8"]["parameters"]["member1"]["name"].setValue( 'layerName' )
__children["BatchOutputs"]["outputs"]["output8"]["parameters"]["member1"]["value"].setValue( 'N_noice' )
__children["BatchOutputs"]["outputs"]["output9"]["name"].setValue( 'Batch/Arnold/Z_Noice' )
__children["BatchOutputs"]["outputs"]["output9"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/Z_noice/Z_noice.####.exr' )
__children["BatchOutputs"]["outputs"]["output9"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output9"]["data"].setValue( 'float Z' )
__children["BatchOutputs"]["outputs"]["output9"]["parameters"]["member2"]["name"].setValue( 'layerName' )
__children["BatchOutputs"]["outputs"]["output9"]["parameters"]["member2"]["value"].setValue( 'Z_noice' )
__children["BatchOutputs"]["outputs"]["output10"]["name"].setValue( 'Batch/Arnold/Crypto_Object' )
__children["BatchOutputs"]["outputs"]["output10"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/crypto_object/crypto_object.####.exr' )
__children["BatchOutputs"]["outputs"]["output10"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output10"]["data"].setValue( 'color crypto_object' )
__children["BatchOutputs"]["outputs"]["output11"]["name"].setValue( 'Batch/Arnold/Crypto_Material' )
__children["BatchOutputs"]["outputs"]["output11"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/crypto_material/crypto_material.####.exr' )
__children["BatchOutputs"]["outputs"]["output11"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output11"]["data"].setValue( 'color crypto_material' )
__children["BatchOutputs"]["outputs"]["output12"]["name"].setValue( 'Batch/Arnold/Diffuse' )
__children["BatchOutputs"]["outputs"]["output12"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/diffuse/diffuse.####.exr' )
__children["BatchOutputs"]["outputs"]["output12"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output12"]["data"].setValue( 'color diffuse' )
__children["BatchOutputs"]["outputs"]["output12"]["parameters"]["member1"]["name"].setValue( 'preserve_layer_name' )
__children["BatchOutputs"]["outputs"]["output12"]["parameters"]["member1"]["value"].setValue( True )
__children["BatchOutputs"]["outputs"]["output13"]["name"].setValue( 'Batch/Arnold/Denoise_Albedo' )
__children["BatchOutputs"]["outputs"]["output13"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/denoise_albedo/denoise_albedo.####.exr' )
__children["BatchOutputs"]["outputs"]["output13"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output13"]["data"].setValue( 'color denoise_albedo' )
__children["BatchOutputs"]["outputs"]["output13"]["parameters"]["member1"]["name"].setValue( 'preserve_layer_name' )
__children["BatchOutputs"]["outputs"]["output13"]["parameters"]["member1"]["value"].setValue( True )
__children["BatchOutputs"]["outputs"]["output14"]["name"].setValue( 'Batch/Arnold/Specular' )
__children["BatchOutputs"]["outputs"]["output14"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/specular/specular.####.exr' )
__children["BatchOutputs"]["outputs"]["output14"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output14"]["data"].setValue( 'color specular' )
__children["BatchOutputs"]["outputs"]["output14"]["parameters"]["member1"]["name"].setValue( 'preserve_layer_name' )
__children["BatchOutputs"]["outputs"]["output14"]["parameters"]["member1"]["value"].setValue( True )
__children["BatchOutputs"]["outputs"]["output15"]["name"].setValue( 'Batch/Arnold/Diffuse_Noice' )
__children["BatchOutputs"]["outputs"]["output15"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/diffuse_noice/diffuse_noice.####.exr' )
__children["BatchOutputs"]["outputs"]["output15"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output15"]["data"].setValue( 'color diffuse' )
__children["BatchOutputs"]["outputs"]["output15"]["parameters"]["member1"]["name"].setValue( 'filter' )
__children["BatchOutputs"]["outputs"]["output15"]["parameters"]["member1"]["value"].setValue( 'variance' )
__children["BatchOutputs"]["outputs"]["output15"]["parameters"]["member2"]["name"].setValue( 'layerName' )
__children["BatchOutputs"]["outputs"]["output15"]["parameters"]["member2"]["value"].setValue( 'diffuse_noice' )
__children["BatchOutputs"]["outputs"]["output16"]["name"].setValue( 'Batch/Arnold/Specular_Noice' )
__children["BatchOutputs"]["outputs"]["output16"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/specular_noice/specular_noice.####.exr' )
__children["BatchOutputs"]["outputs"]["output16"]["type"].setValue( 'exr' )
__children["BatchOutputs"]["outputs"]["output16"]["data"].setValue( 'color specular' )
__children["BatchOutputs"]["outputs"]["output16"]["parameters"]["member1"]["name"].setValue( 'filter' )
__children["BatchOutputs"]["outputs"]["output16"]["parameters"]["member1"]["value"].setValue( 'variance' )
__children["BatchOutputs"]["outputs"]["output16"]["parameters"]["member2"]["name"].setValue( 'layerName' )
__children["BatchOutputs"]["outputs"]["output16"]["parameters"]["member2"]["value"].setValue( 'specular_noice' )
__children["BatchOutputs"]["__uiPosition"].setValue( imath.V2f( -19.2999992, -36.7202568 ) )
__children["CollectImages"]["in"].setInput( __children["ImageReader"]["out"] )
__children["CollectImages"]["rootLayers"].setValue( IECore.StringVectorData( [ 'beauty', 'beauty_noice', 'beautyLightGroups', 'beautyLightGroups_noice', 'N_noice', 'Z_noice', 'denoise_albedo', 'crypto_object', 'crypto_material', 'diffuse', 'diffuse_noice', 'specular', 'specular_noice' ] ) )
__children["CollectImages"]["addLayerPrefix"].setValue( False )
__children["CollectImages"]["mergeMetadata"].setValue( True )
__children["CollectImages"]["__uiPosition"].setValue( imath.V2f( -5.74158001, -53.0760193 ) )
__children["ImageReader"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/${collect:layerName}/${collect:layerName}.####.exr' )
__children["ImageReader"]["refreshCount"].setValue( 1 )
__children["ImageReader"]["__uiPosition"].setValue( imath.V2f( -5.74158001, -44.9119568 ) )
__children["InspectMetadata"]["Expression"]["__engine"].setValue( 'python' )
__children["InspectMetadata"]["Expression"]["__expression"].setValue( 'import IECore\n\nmetadata = parent["__in"]["p0"]\nfilter = parent["__in"]["p1"] or "*"\ntemplate = parent["__in"]["p2"]\n\nparent["__out"]["p0"] = "\\n".join( sorted( [ template.format( key = k, value = v ) for k, v in metadata.items() if IECore.StringAlgo.matchMultiple( k, filter ) ] ) )' )


del __children

