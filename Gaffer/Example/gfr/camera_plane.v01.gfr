import Gaffer
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 10, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:version", Gaffer.IntPlug( "value", defaultValue = 1, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectVersion", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:resources", Gaffer.StringPlug( "value", defaultValue = '/mnt/DATA/projects/cuarentena/config/resouces', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectResources", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "LDTGaffer:resources", Gaffer.StringPlug( "value", defaultValue = '${LDTGaffer}/resources/', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "LDTGafferResources", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["defaultFormat1"] = GafferImage.FormatPlug( "defaultFormat1", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat1"] )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat2"] = GafferImage.FormatPlug( "defaultFormat2", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat2"] )
__children["Rename"] = GafferScene.Rename( "Rename" )
parent.addChild( __children["Rename"] )
__children["Rename"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter8"] = GafferScene.PathFilter( "PathFilter8" )
parent.addChild( __children["PathFilter8"] )
__children["PathFilter8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["cameras"] = GafferScene.Group( "cameras" )
parent.addChild( __children["cameras"] )
__children["cameras"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["cameras"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"] = Gaffer.Box( "CameraImagePlane" )
parent.addChild( __children["CameraImagePlane"] )
__children["CameraImagePlane"].addChild( GafferScene.OpenGLShader( "Texture" ) )
__children["CameraImagePlane"]["Texture"].loadShader( "Texture" )
__children["CameraImagePlane"]["Texture"]["parameters"].addChild( Gaffer.FloatPlug( "mult", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Texture"]["parameters"].addChild( GafferImage.ImagePlug( "texture", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Texture"]["parameters"].addChild( Gaffer.Color4fPlug( "tint", defaultValue = imath.Color4f( 0, 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Texture"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["CameraImagePlane"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( GafferScene.Plane( "image_plane" ) )
__children["CameraImagePlane"]["image_plane"]["user"].addChild( Gaffer.FloatPlug( "depth", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["image_plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.BoxIn( "BoxIn2" ) )
__children["CameraImagePlane"]["BoxIn2"].setup( GafferScene.ScenePlug( "out", ) )
__children["CameraImagePlane"]["BoxIn2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( GafferScene.ScenePlug( "scene", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( GafferScene.Parent( "Parent" ) )
__children["CameraImagePlane"]["Parent"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["CameraImagePlane"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["CameraImagePlane"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.Dot( "SceneIn" ) )
__children["CameraImagePlane"]["SceneIn"].setup( GafferScene.ScenePlug( "in", ) )
__children["CameraImagePlane"]["SceneIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.FloatPlug( "user_depth", defaultValue = 10.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( GafferImage.ImageReader( "ImageReader" ) )
__children["CameraImagePlane"]["ImageReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.Dot( "ImageIn" ) )
__children["CameraImagePlane"]["ImageIn"].setup( GafferImage.ImagePlug( "in", ) )
__children["CameraImagePlane"]["ImageIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.StringPlug( "image", defaultValue = '/mnt/DATA/projects/cuarentena/b04/b04_2370/images/elem/b04_2370.SRC/b04_2370.SRC.#.exr', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, substitutions = IECore.StringAlgo.Substitutions.VariableSubstitutions | IECore.StringAlgo.Substitutions.EscapeSubstitutions | IECore.StringAlgo.Substitutions.TildeSubstitutions ) )
__children["CameraImagePlane"].addChild( Gaffer.FloatPlug( "tweaks_focalLength_value", defaultValue = 25.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.ContextVariables( "SceneContextVariables" ) )
__children["CameraImagePlane"]["SceneContextVariables"].setup( GafferScene.ScenePlug( "in", ) )
__children["CameraImagePlane"]["SceneContextVariables"]["variables"].addChild( Gaffer.NameValuePlug( "test", Gaffer.InternedStringVectorDataPlug( "value", defaultValue = IECore.InternedStringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), False, "member2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["CameraImagePlane"]["SceneContextVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.Expression( "Expression" ) )
__children["CameraImagePlane"]["Expression"]["__in"].addChild( GafferImage.AtomicFormatPlug( "p0", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Expression"]["__in"].addChild( Gaffer.ObjectPlug( "p1", defaultValue = IECore.NullObject(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Expression"]["__in"].addChild( Gaffer.FloatPlug( "p2", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 1.0, minValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p3", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p4", direction = Gaffer.Plug.Direction.Out, defaultValue = 25.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.Expression( "Expression1" ) )
__children["CameraImagePlane"]["Expression1"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Expression1"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Expression1"]["__out"].addChild( Gaffer.InternedStringVectorDataPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.InternedStringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"]["Expression1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.StringPlug( "camera", defaultValue = '/cameras/render_camera', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.FloatPlug( "opacity", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.Dot( "Dot" ) )
__children["CameraImagePlane"]["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["CameraImagePlane"]["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CameraImagePlane"].addChild( Gaffer.Dot( "Dot1" ) )
__children["CameraImagePlane"]["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["CameraImagePlane"]["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat3"] = GafferImage.FormatPlug( "defaultFormat3", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat3"] )
parent["frameRange"]["start"].setValue( 1001 )
parent["frameRange"]["end"].setValue( 1398 )
parent["frame"].setValue( 1084.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 36801 )
parent["variables"]["projectRootDirectory"]["value"].setValue( '/mnt/projects/vfxpj/tst/tst_0010/comp/gaffer' )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectVersion"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectResources"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["LDTGafferResources"]["name"], 'readOnly', True )
__children["Rename"]["in"].setInput( __children["cameras"]["out"] )
__children["Rename"]["filter"].setInput( __children["PathFilter8"]["out"] )
__children["Rename"]["name"].setValue( 'render_camera' )
__children["Rename"]["__uiPosition"].setValue( imath.V2f( -6, -4.3905344 ) )
__children["PathFilter8"]["paths"].setValue( IECore.StringVectorData( [ '/cameras/camera' ] ) )
__children["PathFilter8"]["__uiPosition"].setValue( imath.V2f( 12.0438957, -0.0472650528 ) )
__children["Camera"]["perspectiveMode"].setValue( 1 )
__children["Camera"]["apertureAspectRatio"].setValue( 1.333299994468689 )
__children["Camera"]["aperture"].setValue( imath.V2f( 24.8920002, 18.6690006 ) )
__children["Camera"]["visualiserAttributes"]["frustum"]["value"].setValue( 'on' )
__children["Camera"]["visualiserAttributes"]["frustum"]["enabled"].setValue( True )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( -7.5, 11.9375906 ) )
__children["cameras"]["in"][0].setInput( __children["Camera"]["out"] )
__children["cameras"]["name"].setValue( 'cameras' )
__children["cameras"]["__uiPosition"].setValue( imath.V2f( -6, 3.7735281 ) )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"], 'layout:section::summary', '' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"], 'noduleLayout:customGadget:addButtonTop:visible', False )
__children["CameraImagePlane"]["Texture"]["parameters"]["mult"].setValue( 1.0 )
__children["CameraImagePlane"]["Texture"]["parameters"]["texture"].setInput( __children["CameraImagePlane"]["ImageIn"]["out"] )
__children["CameraImagePlane"]["Texture"]["parameters"]["tint"]["r"].setValue( 1.0 )
__children["CameraImagePlane"]["Texture"]["parameters"]["tint"]["g"].setValue( 1.0 )
__children["CameraImagePlane"]["Texture"]["parameters"]["tint"]["b"].setValue( 1.0 )
__children["CameraImagePlane"]["Texture"]["parameters"]["tint"]["a"].setInput( __children["CameraImagePlane"]["opacity"] )
__children["CameraImagePlane"]["Texture"]["__uiPosition"].setValue( imath.V2f( -165.337494, -232.90358 ) )
__children["CameraImagePlane"]["ShaderAssignment"]["in"].setInput( __children["CameraImagePlane"]["image_plane"]["out"] )
__children["CameraImagePlane"]["ShaderAssignment"]["shader"].setInput( __children["CameraImagePlane"]["Texture"]["out"] )
__children["CameraImagePlane"]["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( -146.232285, -232.90358 ) )
__children["CameraImagePlane"]["image_plane"]["user"]["depth"].setInput( __children["CameraImagePlane"]["user_depth"] )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["image_plane"]["user"]["depth"], 'nodule:type', '' )
__children["CameraImagePlane"]["image_plane"]["name"].setValue( 'image_plane' )
__children["CameraImagePlane"]["image_plane"]["transform"]["translate"]["z"].setInput( __children["CameraImagePlane"]["Expression"]["__out"]["p3"] )
__children["CameraImagePlane"]["image_plane"]["transform"]["scale"]["x"].setInput( __children["CameraImagePlane"]["Expression"]["__out"]["p1"] )
__children["CameraImagePlane"]["image_plane"]["transform"]["scale"]["y"].setInput( __children["CameraImagePlane"]["Expression"]["__out"]["p2"] )
__children["CameraImagePlane"]["image_plane"]["dimensions"]["x"].setInput( __children["CameraImagePlane"]["Expression"]["__out"]["p0"] )
__children["CameraImagePlane"]["image_plane"]["__uiPosition"].setValue( imath.V2f( -146.232285, -219.824402 ) )
__children["CameraImagePlane"]["__uiPosition"].setValue( imath.V2f( -6, -24.3854237 ) )
__children["CameraImagePlane"]["BoxIn2"]["name"].setValue( 'scene' )
__children["CameraImagePlane"]["BoxIn2"]["__in"].setInput( __children["CameraImagePlane"]["scene"] )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["BoxIn2"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["BoxIn2"]["__in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["BoxIn2"]["__in"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["BoxIn2"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["BoxIn2"]["out"], 'noduleLayout:section', 'bottom' )
__children["CameraImagePlane"]["BoxIn2"]["__uiPosition"].setValue( imath.V2f( -201.631287, -186.989136 ) )
__children["CameraImagePlane"]["scene"].setInput( __children["Rename"]["out"] )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["scene"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["scene"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["scene"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["scene"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["scene"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["scene"], 'layout:index', 3 )
__children["CameraImagePlane"]["Parent"]["in"].setInput( __children["CameraImagePlane"]["SceneIn"]["out"] )
__children["CameraImagePlane"]["Parent"]["parent"].setInput( __children["CameraImagePlane"]["Expression1"]["__out"]["p0"] )
__children["CameraImagePlane"]["Parent"]["children"][0].setInput( __children["CameraImagePlane"]["ShaderAssignment"]["out"] )
__children["CameraImagePlane"]["Parent"]["__uiPosition"].setValue( imath.V2f( -199.381287, -265.063293 ) )
__children["CameraImagePlane"]["BoxOut"]["in"].setInput( __children["CameraImagePlane"]["Parent"]["out"] )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["BoxOut"]["__out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["CameraImagePlane"]["BoxOut"]["passThrough"].setInput( __children["CameraImagePlane"]["Dot1"]["out"] )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["CameraImagePlane"]["BoxOut"]["enabled"].setInput( __children["CameraImagePlane"]["enabled"] )
__children["CameraImagePlane"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -197.881287, -281.077271 ) )
__children["CameraImagePlane"]["out"].setInput( __children["CameraImagePlane"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["out"], 'layout:index', 5 )
__children["CameraImagePlane"]["SceneIn"]["labelType"].setValue( 1 )
__children["CameraImagePlane"]["SceneIn"]["in"].setInput( __children["CameraImagePlane"]["BoxIn2"]["out"] )
__children["CameraImagePlane"]["SceneIn"]["__uiPosition"].setValue( imath.V2f( -201.631287, -204.389572 ) )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["user_depth"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["user_depth"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["user_depth"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["user_depth"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["user_depth"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["user_depth"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["user_depth"], 'label', 'Image Plane Depth' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["user_depth"], 'divider', True )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["user_depth"], 'buttonPlugValueWidget:clicked', '' )
__children["CameraImagePlane"]["ImageReader"]["fileName"].setInput( __children["CameraImagePlane"]["image"] )
__children["CameraImagePlane"]["ImageReader"]["missingFrameMode"].setValue( 1 )
__children["CameraImagePlane"]["ImageReader"]["__uiPosition"].setValue( imath.V2f( -171.165802, -187.17189 ) )
__children["CameraImagePlane"]["ImageIn"]["in"].setInput( __children["CameraImagePlane"]["ImageReader"]["out"] )
__children["CameraImagePlane"]["ImageIn"]["__uiPosition"].setValue( imath.V2f( -171.165802, -196.47583 ) )
__children["CameraImagePlane"]["image"].setValue( '${GAFFER_ROOT}/resources/images/macaw.exr' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["image"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["image"], 'description', "The name of the file to be read. File sequences with\narbitrary padding may be specified using the '#' character\nas a placeholder for the frame numbers. If this file sequence\nformat is used, then missingFrameMode will be activated." )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["image"], 'plugValueWidget:type', 'GafferUI.FileSystemPathPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["image"], 'path:leaf', True )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["image"], 'path:bookmarks', 'image' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["image"], 'fileSystemPath:extensions', 'bmp dib cin dds dpx fits hdr rgbe ico iff z jpg jpe jpeg jif jfif jfi jp2 j2k j2c null nul exr sxr mxr png ppm pgm pbm pnm pfm psd pdd psb bay bmq cr2 crw cs1 dc2 dcr dng erf fff k25 kdc mdc mos mrw nef orf pef pxn raf raw rdc sr2 srf x3f arw 3fr cine ia kc2 mef nrw qtk rw2 sti rwl srw drf dsc ptx cap iiq rwz cr3 rla sgi rgb rgba bw int inta socket pic tif tiff tx env sm vsm tga tpic term zfile osl oso oslgroup oslbody' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["image"], 'fileSystemPath:extensionsLabel', 'Show only image files' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["image"], 'fileSystemPath:includeSequences', True )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["image"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["image"], 'layout:index', 1 )
__children["CameraImagePlane"]["tweaks_focalLength_value"].setInput( __children["CameraImagePlane"]["Expression"]["__out"]["p4"] )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["tweaks_focalLength_value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["tweaks_focalLength_value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["tweaks_focalLength_value"], 'description', "The focal length portion of the _Aperture and Focal Length_\nperspective mode. This is equivalent to the lens's focal\nlength in a real camera setup. Use this in conjunction with\nthe aperture to set the camera's equivalent field of view.\nLike on a real camera, the aperture is typically constant,\nand the focal length is then adjusted to control the field\nof view.\n\nThis can be a distance in any unit of length, as long as\nyou use the same unit for the aperture. You can safely\nfollow convention and use millimeters for both.\n\nThe final field of view of a render using this camera will\ndepend on these settings in combination with the\n`resolution` and `filmFit` render options." )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["tweaks_focalLength_value"], 'noduleLayout:label', 'focalLength' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["tweaks_focalLength_value"], 'spreadsheet:columnName', 'focalLengthValue' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["tweaks_focalLength_value"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["tweaks_focalLength_value"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["tweaks_focalLength_value"], 'label', 'Focal Length' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["tweaks_focalLength_value"], 'noduleLayout:section', None )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["tweaks_focalLength_value"], 'divider', False )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["enabled"], 'layout:index', 7 )
__children["CameraImagePlane"]["SceneContextVariables"]["variables"]["member2"]["name"].setValue( 'scene:path' )
__children["CameraImagePlane"]["SceneContextVariables"]["variables"]["member2"]["enabled"].setValue( True )
__children["CameraImagePlane"]["SceneContextVariables"]["variables"]["member2"]["value"].setInput( __children["CameraImagePlane"]["Expression1"]["__out"]["p1"] )
__children["CameraImagePlane"]["SceneContextVariables"]["in"].setInput( __children["CameraImagePlane"]["SceneIn"]["out"] )
__children["CameraImagePlane"]["SceneContextVariables"]["__uiPosition"].setValue( imath.V2f( -213.043701, -215.885941 ) )
__children["CameraImagePlane"]["Expression"]["__in"]["p0"].setInput( __children["CameraImagePlane"]["ImageIn"]["out"]["format"] )
__children["CameraImagePlane"]["Expression"]["__in"]["p1"].setInput( __children["CameraImagePlane"]["SceneContextVariables"]["out"]["object"] )
__children["CameraImagePlane"]["Expression"]["__in"]["p2"].setInput( __children["CameraImagePlane"]["image_plane"]["user"]["depth"] )
__children["CameraImagePlane"]["Expression"]["__uiPosition"].setValue( imath.V2f( -157.674927, -219.989883 ) )
__children["CameraImagePlane"]["Expression1"]["__in"]["p0"].setInput( __children["CameraImagePlane"]["camera"] )
__children["CameraImagePlane"]["Expression1"]["__uiPosition"].setValue( imath.V2f( -229.316513, -215.281296 ) )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["camera"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["camera"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["camera"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["camera"], 'label', 'Camera Location' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["opacity"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["opacity"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["opacity"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["opacity"], 'layout:index', 6 )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["opacity"], 'nodule:type', '' )
__children["CameraImagePlane"]["Dot"]["in"].setInput( __children["CameraImagePlane"]["BoxIn2"]["out"] )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["Dot"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["Dot"]["out"], 'noduleLayout:section', 'bottom' )
__children["CameraImagePlane"]["Dot"]["__uiPosition"].setValue( imath.V2f( -189.390762, -199.452179 ) )
__children["CameraImagePlane"]["Dot1"]["in"].setInput( __children["CameraImagePlane"]["Dot"]["out"] )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["Dot1"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["CameraImagePlane"]["Dot1"]["out"], 'noduleLayout:section', 'bottom' )
__children["CameraImagePlane"]["Dot1"]["__uiPosition"].setValue( imath.V2f( -189.390762, -264.549286 ) )
__children["CameraImagePlane"]["Expression"]["__engine"].setValue( 'python' )
__children["CameraImagePlane"]["Expression"]["__expression"].setValue( 'import IECoreScene\nobj = parent["__in"]["p1"]\nprint("________")\nfor p in obj.parameters().items():\n\tprint(p)\n\t\nformat = parent["__in"]["p0"]\nwidth = format.getDisplayWindow().size().x\nheight = format.getDisplayWindow().size().y\npixel_aspect = width/height\nparent["__out"]["p0"] = pixel_aspect\nip_depth = parent["__in"]["p2"]\nparent["__out"]["p3"] = ip_depth*-1\n\nfocal = float(obj.parameters()["focalLength"])\nparent["__out"]["p4"] = focal\n\nhaperture = float(obj.parameters()["aperture"].value.x)\nvaperture = float(obj.parameters()["aperture"].value.y)\n\norig_aspect = haperture/vaperture\nmult = (vaperture/focal)/pixel_aspect*orig_aspect\n\nparent["__out"]["p1"] = ip_depth*mult\nparent["__out"]["p2"] = ip_depth*mult\n\n\t\n' )
__children["CameraImagePlane"]["Expression1"]["__engine"].setValue( 'python' )
__children["CameraImagePlane"]["Expression1"]["__expression"].setValue( 'camera_location = parent["__in"]["p0"]\ncamera_context = camera_location.strip("/").split("/")\nparent["__out"]["p1"] = IECore.InternedStringVectorData( camera_context )\nparent["__out"]["p0"] = camera_location' )


del __children

