import Gaffer
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 8, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Sphere"] = GafferScene.Sphere( "Sphere" )
parent.addChild( __children["Sphere"] )
__children["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cube"] = GafferScene.Cube( "Cube" )
parent.addChild( __children["Cube"] )
__children["Cube"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Seeds"] = GafferScene.Seeds( "Seeds" )
parent.addChild( __children["Seeds"] )
__children["Seeds"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ClosestPointSampler"] = GafferScene.ClosestPointSampler( "ClosestPointSampler" )
parent.addChild( __children["ClosestPointSampler"] )
__children["ClosestPointSampler"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Instancer"] = GafferScene.Instancer( "Instancer" )
parent.addChild( __children["Instancer"] )
__children["Instancer"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Orientation"] = GafferScene.Orientation( "Orientation" )
parent.addChild( __children["Orientation"] )
__children["Orientation"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cube1"] = GafferScene.Cube( "Cube1" )
parent.addChild( __children["Cube1"] )
__children["Cube1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 38232 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Sphere"]["transform"]["translate"].setValue( imath.V3f( 2.22742748, 0, 0 ) )
__children["Sphere"]["__uiPosition"].setValue( imath.V2f( -8.69988441, 9.79945755 ) )
__children["Cube"]["__uiPosition"].setValue( imath.V2f( -21.6998844, 9.80108738 ) )
__children["Group"]["in"][0].setInput( __children["Cube"]["out"] )
__children["Group"]["in"][1].setInput( __children["Sphere"]["out"] )
__children["Group"]["__uiPosition"].setValue( imath.V2f( -13.6998806, 1.63539493 ) )
__children["Seeds"]["in"].setInput( __children["Group"]["out"] )
__children["Seeds"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Seeds"]["density"].setValue( 232.0 )
__children["Seeds"]["__uiPosition"].setValue( imath.V2f( -13.6990671, -6.52866793 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/group/cube', '/group/sphere' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( -0.699067116, -0.446572632 ) )
__children["ClosestPointSampler"]["in"].setInput( __children["Seeds"]["out"] )
__children["ClosestPointSampler"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["ClosestPointSampler"]["source"].setInput( __children["Seeds"]["out"] )
__children["ClosestPointSampler"]["sourceLocation"].setValue( '${scene:path}/..' )
__children["ClosestPointSampler"]["primitiveVariables"].setValue( 'N' )
__children["ClosestPointSampler"]["__uiPosition"].setValue( imath.V2f( -12.1990671, -19.2418308 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/seeds' ] ) )
__children["PathFilter1"]["roots"].setInput( __children["PathFilter"]["out"] )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 7.55000019, -10.1490993 ) )
__children["Instancer"]["in"].setInput( __children["Orientation"]["out"] )
__children["Instancer"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["Instancer"]["prototypes"].setInput( __children["Cube1"]["out"] )
__children["Instancer"]["prototypeIndex"].setValue( 'prototypeIndex' )
__children["Instancer"]["orientation"].setValue( 'orientation' )
__children["Instancer"]["scale"].setValue( 'scale' )
__children["Instancer"]["attributePrefix"].setValue( 'user:' )
__children["Instancer"]["__uiPosition"].setValue( imath.V2f( -10.6990671, -41.2339821 ) )
__children["Orientation"]["in"].setInput( __children["ClosestPointSampler"]["out"] )
__children["Orientation"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["Orientation"]["inMode"].setValue( 3 )
__children["Orientation"]["inYAxis"].setValue( 'N' )
__children["Orientation"]["__uiPosition"].setValue( imath.V2f( -12.1990671, -31.3432369 ) )
__children["Cube1"]["dimensions"].setValue( imath.V3f( 0.00999999978, 0.200000003, 0.00999999978 ) )
__children["Cube1"]["__uiPosition"].setValue( imath.V2f( 8.79114723, -31.5457134 ) )


del __children

