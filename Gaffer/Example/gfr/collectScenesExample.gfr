import Gaffer
import GafferArnold
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "image:viewName", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "defaultViewName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["CollectScenes"] = GafferScene.CollectScenes( "CollectScenes" )
parent.addChild( __children["CollectScenes"] )
__children["CollectScenes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SceneReader"] = GafferScene.SceneReader( "SceneReader" )
parent.addChild( __children["SceneReader"] )
__children["SceneReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.StringVectorDataPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = IECore.StringVectorData( [  ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shot1"] = Gaffer.ContextVariables( "Shot1" )
parent.addChild( __children["Shot1"] )
__children["Shot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["Shot1"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Shot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shot2"] = Gaffer.ContextVariables( "Shot2" )
parent.addChild( __children["Shot2"] )
__children["Shot2"].setup( GafferScene.ScenePlug( "in", ) )
__children["Shot2"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Shot2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SpotLight"] = GafferArnold.ArnoldLight( "SpotLight" )
parent.addChild( __children["SpotLight"] )
__children["SpotLight"].loadShader( "spot_light" )
__children["SpotLight"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CollectScenes1"] = GafferScene.CollectScenes( "CollectScenes1" )
parent.addChild( __children["CollectScenes1"] )
__children["CollectScenes1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CollectScenes1Spreadsheet"] = Gaffer.Spreadsheet( "CollectScenes1Spreadsheet" )
parent.addChild( __children["CollectScenes1Spreadsheet"] )
__children["CollectScenes1Spreadsheet"]["rows"].addColumn( Gaffer.Color3fPlug( "color", defaultValue = imath.Color3f( 1, 1, 1 ), ) )
__children["CollectScenes1Spreadsheet"]["rows"].addColumn( Gaffer.FloatPlug( "exposure", defaultValue = 0.0, ) )
__children["CollectScenes1Spreadsheet"]["rows"].addColumn( Gaffer.StringPlug( "aov", defaultValue = 'default', ) )
__children["CollectScenes1Spreadsheet"]["rows"].addColumn( Gaffer.TransformPlug( "transform", ) )
__children["CollectScenes1Spreadsheet"]["rows"].addRows( 3 )
__children["CollectScenes1Spreadsheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 49705 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["defaultViewName"], 'layout:visibilityActivator', False )
Gaffer.Metadata.registerValue( parent["variables"]["defaultViewName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["defaultViewName"]["value"], 'readOnly', True )
__children["CollectScenes"]["in"].setInput( __children["SceneReader"]["out"] )
__children["CollectScenes"]["rootNames"].setInput( __children["Expression"]["__out"]["p1"] )
__children["CollectScenes"]["__uiPosition"].setValue( imath.V2f( 2.00000072, -1.40012598 ) )
__children["SceneReader"]["fileName"].setInput( __children["Expression"]["__out"]["p0"] )
__children["SceneReader"]["__uiPosition"].setValue( imath.V2f( 2.00000072, 6.763937 ) )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( -20.3623657, -1.09243941 ) )
__children["Shot1"]["variables"]["member1"]["name"].setValue( 'shot' )
__children["Shot1"]["variables"]["member1"]["value"].setValue( 'shot1' )
__children["Shot1"]["in"].setInput( __children["CollectScenes"]["out"] )
__children["Shot1"]["__uiPosition"].setValue( imath.V2f( -9.9122448, -15.1048622 ) )
__children["Shot2"]["variables"]["member1"]["name"].setValue( 'shot' )
__children["Shot2"]["variables"]["member1"]["value"].setValue( 'shot2' )
__children["Shot2"]["in"].setInput( __children["CollectScenes"]["out"] )
__children["Shot2"]["__uiPosition"].setValue( imath.V2f( 14.50599, -14.9614744 ) )
__children["SpotLight"]["name"].setValue( 'spotLight' )
__children["SpotLight"]["transform"].setInput( __children["CollectScenes1Spreadsheet"]["out"]["transform"] )
__children["SpotLight"]["parameters"]["color"].setInput( __children["CollectScenes1Spreadsheet"]["out"]["color"] )
__children["SpotLight"]["parameters"]["exposure"].setInput( __children["CollectScenes1Spreadsheet"]["out"]["exposure"] )
__children["SpotLight"]["parameters"]["aov"].setInput( __children["CollectScenes1Spreadsheet"]["out"]["aov"] )
__children["SpotLight"]["__uiPosition"].setValue( imath.V2f( 54.4139786, 1.41853237 ) )
__children["CollectScenes1"]["in"].setInput( __children["SpotLight"]["out"] )
__children["CollectScenes1"]["rootNames"].setInput( __children["CollectScenes1Spreadsheet"]["enabledRowNames"] )
Gaffer.Metadata.registerValue( __children["CollectScenes1"]["rootNameVariable"], 'readOnly', True )
__children["CollectScenes1"]["sourceRoot"].setValue( '/spotLight' )
__children["CollectScenes1"]["__uiPosition"].setValue( imath.V2f( 54.4139786, -11.0955133 ) )
__children["CollectScenes1Spreadsheet"]["selector"].setValue( '${collect:rootName}' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["selector"], 'readOnly', True )
__children["CollectScenes1Spreadsheet"]["rows"][1]["name"].setValue( 'light1' )
__children["CollectScenes1Spreadsheet"]["rows"][1]["cells"]["color"]["value"].setValue( imath.Color3f( 1, 1, 0.36500001 ) )
__children["CollectScenes1Spreadsheet"]["rows"][1]["cells"]["transform"]["value"]["translate"].setValue( imath.V3f( -6.12446213, 0, 0 ) )
__children["CollectScenes1Spreadsheet"]["rows"][2]["name"].setValue( 'light2' )
__children["CollectScenes1Spreadsheet"]["rows"][2]["cells"]["color"]["value"].setValue( imath.Color3f( 0.254999995, 1, 0.32949996 ) )
__children["CollectScenes1Spreadsheet"]["rows"][3]["name"].setValue( 'light3' )
__children["CollectScenes1Spreadsheet"]["rows"][3]["cells"]["color"]["value"].setValue( imath.Color3f( 1, 0.270000011, 1 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"], 'spreadsheet:columnWidth', 70 )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"], 'noduleLayout:label', 'Color' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"], 'label', 'Color' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"]["r"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"]["r"], 'noduleLayout:label', 'Color.r' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"]["g"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"]["g"], 'noduleLayout:label', 'Color.g' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"]["b"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["color"]["value"]["b"], 'noduleLayout:label', 'Color.b' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["exposure"], 'spreadsheet:columnWidth', 60 )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'noduleLayout:label', 'Exposure' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'label', 'Exposure' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["exposure"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["aov"]["value"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["aov"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["aov"]["value"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["aov"]["value"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["aov"]["value"], 'noduleLayout:visible', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["aov"]["value"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["aov"]["value"], 'noduleLayout:label', 'Aov' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["aov"]["value"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["aov"]["value"], 'label', 'Aov' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["aov"]["value"], 'description', None )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"], 'spreadsheet:columnWidth', 230 )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"], 'spreadsheet:plugMenu:ancestorLabel', 'Transform' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"], 'description', 'The transform applied to the object.' )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["translate"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["translate"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["translate"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["translate"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["rotate"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["rotate"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["rotate"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["rotate"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["scale"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["scale"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["scale"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["scale"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["pivot"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["pivot"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["pivot"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["CollectScenes1Spreadsheet"]["rows"][0]["cells"]["transform"]["value"]["pivot"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
__children["CollectScenes1Spreadsheet"]["__uiPosition"].setValue( imath.V2f( 43.7085114, -11.0952044 ) )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'assetDatabase = {\n\t"shot1" : {\n\t\t"cow1" : "${GAFFER_ROOT}/resources/cow/cow.scc",\n\t\t"robotA" : "${GAFFER_ROOT}/resources/gafferBot/caches/gafferBot.scc",\n\t\t"robotB" : "${GAFFER_ROOT}/resources/gafferBot/caches/gafferBot.scc",\n\t},\n\t"shot2" : {\n\t\t"cow1" : "${GAFFER_ROOT}/resources/cow/cow.scc",\n\t\t"cow2" : "${GAFFER_ROOT}/resources/cow/cow.scc",\n\t\t"cow3" : "${GAFFER_ROOT}/resources/cow/cow.scc",\n\t\t"robotC" : "${GAFFER_ROOT}/resources/gafferBot/caches/gafferBot.scc",\n\t}\n}\n\nshot = context.get( "shot", "" )\nassets = assetDatabase.get( shot, {} )\n\nparent["__out"]["p1"] = IECore.StringVectorData( list( assets.keys() ) )\n\ncollectRoot = context.get( "collect:rootName", "" )\n\nparent["__out"]["p0"] = assets.get( collectRoot, "" )' )


del __children

