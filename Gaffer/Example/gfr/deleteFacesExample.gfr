import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:id", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectIndex", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:renderDirectory", Gaffer.StringPlug( "value", defaultValue = '${project:rootDirectory}/renders/${script:name}/${shot}/${layer}/${render_version}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRenderDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "LDTGaffer:resources", Gaffer.StringPlug( "value", defaultValue = '${LDTGaffer}/resources/', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "LDTGafferResources", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject"] = GafferOSL.OSLObject( "OSLObject" )
parent.addChild( __children["OSLObject"] )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "", GafferOSL.ClosurePlug( "value", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "legacyClosure", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OutInt"] = GafferOSL.OSLShader( "OutInt" )
parent.addChild( __children["OutInt"] )
__children["OutInt"].loadShader( "ObjectProcessing/OutInt" )
__children["OutInt"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DeleteFaces"] = GafferScene.DeleteFaces( "DeleteFaces" )
parent.addChild( __children["DeleteFaces"] )
__children["DeleteFaces"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.V3fPlug( "uv", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["OSLCode"]["out"].addChild( Gaffer.IntPlug( "deleteMe", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InUV"] = GafferOSL.OSLShader( "InUV" )
parent.addChild( __children["InUV"] )
__children["InUV"].loadShader( "ObjectProcessing/InUV" )
__children["InUV"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
parent["variables"]["imageCataloguePort"]["value"].setValue( 37237 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectIndex"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRenderDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["LDTGafferResources"]["name"], 'readOnly', True )
__children["Plane"]["divisions"].setValue( imath.V2i( 8, 8 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( 1.64999986, 6.45000076 ) )
__children["OSLObject"]["in"].setInput( __children["Plane"]["out"] )
__children["OSLObject"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["OSLObject"]["interpolation"].setValue( 2 )
__children["OSLObject"]["primitiveVariables"]["legacyClosure"]["value"].setInput( __children["OutInt"]["out"]["primitiveVariable"] )
__children["OSLObject"]["__uiPosition"].setValue( imath.V2f( 1.64999986, -1.71406198 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 14.6499996, 4.36796951 ) )
__children["OutInt"]["parameters"]["name"].setValue( 'deleteMe' )
__children["OutInt"]["parameters"]["value"].setInput( __children["OSLCode"]["out"]["deleteMe"] )
__children["OutInt"]["__uiPosition"].setValue( imath.V2f( -11.1146488, -1.11406183 ) )
__children["DeleteFaces"]["in"].setInput( __children["OSLObject"]["out"] )
__children["DeleteFaces"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["DeleteFaces"]["faces"].setValue( 'deleteMe' )
__children["DeleteFaces"]["__uiPosition"].setValue( imath.V2f( 1.64999962, -9.87812424 ) )
__children["OSLCode"]["parameters"]["uv"].setInput( __children["InUV"]["out"]["value"] )
__children["OSLCode"]["code"].setValue( 'deleteMe = (int)(u * 8 + v * 8) % 2 ;' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -22.3414345, -1.71406174 ) )
__children["InUV"]["__uiPosition"].setValue( imath.V2f( -33.09021, -1.71406174 ) )


del __children

