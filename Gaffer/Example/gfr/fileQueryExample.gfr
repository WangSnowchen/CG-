import Gaffer
import GafferImage
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 10, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["FileNameFilter"] = Gaffer.Box( "FileNameFilter" )
parent.addChild( __children["FileNameFilter"] )
__children["FileNameFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter"].addChild( Gaffer.StringPlug( "in", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter"].addChild( Gaffer.StringPlug( "filterPattern", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter"].addChild( Gaffer.Expression( "Expression" ) )
__children["FileNameFilter"]["Expression"]["__in"].addChild( Gaffer.BoolPlug( "p0", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter"]["Expression"]["__in"].addChild( Gaffer.StringPlug( "p1", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter"]["Expression"]["__in"].addChild( Gaffer.StringPlug( "p2", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter"]["Expression"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter"].addChild( Gaffer.StringPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileQuery"] = Gaffer.Box( "FileQuery" )
parent.addChild( __children["FileQuery"] )
__children["FileQuery"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileQuery"].addChild( Gaffer.StringPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileQuery"].addChild( Gaffer.StringPlug( "filePath", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileQuery"].addChild( Gaffer.Expression( "Expression" ) )
__children["FileQuery"]["Expression"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileQuery"]["Expression"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileQuery"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter1"] = Gaffer.Box( "FileNameFilter1" )
parent.addChild( __children["FileNameFilter1"] )
__children["FileNameFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter1"].addChild( Gaffer.StringPlug( "in", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter1"].addChild( Gaffer.StringPlug( "filterPattern", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter1"].addChild( Gaffer.Expression( "Expression" ) )
__children["FileNameFilter1"]["Expression"]["__in"].addChild( Gaffer.BoolPlug( "p0", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter1"]["Expression"]["__in"].addChild( Gaffer.StringPlug( "p1", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter1"]["Expression"]["__in"].addChild( Gaffer.StringPlug( "p2", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter1"]["Expression"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter1"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter1"].addChild( Gaffer.StringPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileNameFilter1"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader"] = GafferImage.ImageReader( "ImageReader" )
parent.addChild( __children["ImageReader"] )
__children["ImageReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader1"] = GafferImage.ImageReader( "ImageReader1" )
parent.addChild( __children["ImageReader1"] )
__children["ImageReader1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextQuery"] = Gaffer.ContextQuery( "ContextQuery" )
parent.addChild( __children["ContextQuery"] )
__children["ContextQuery"].addQuery( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextQuery"]["out"][0].addChild( Gaffer.IntPlug( "value", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextQuery"]["out"][0].addChild( Gaffer.IntPlug( "value1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextQuery"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileIndexFilter"] = Gaffer.Box( "FileIndexFilter" )
parent.addChild( __children["FileIndexFilter"] )
__children["FileIndexFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileIndexFilter"].addChild( Gaffer.StringPlug( "in", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileIndexFilter"].addChild( Gaffer.Expression( "Expression" ) )
__children["FileIndexFilter"]["Expression"]["__in"].addChild( Gaffer.BoolPlug( "p0", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileIndexFilter"]["Expression"]["__in"].addChild( Gaffer.StringPlug( "p1", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileIndexFilter"]["Expression"]["__in"].addChild( Gaffer.IntPlug( "p2", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileIndexFilter"]["Expression"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileIndexFilter"]["Expression"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileIndexFilter"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileIndexFilter"].addChild( Gaffer.StringPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileIndexFilter"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileIndexFilter"].addChild( Gaffer.IntPlug( "index", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FileIndexFilter"].addChild( Gaffer.IntPlug( "count", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frame"].setValue( 11.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 41143 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( __children["FileNameFilter"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["FileNameFilter"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["FileNameFilter"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["FileNameFilter"], 'noduleLayout:customGadget:addButtonRight:visible', False )
__children["FileNameFilter"]["__uiPosition"].setValue( imath.V2f( 35.5388718, 3.24999905 ) )
__children["FileNameFilter"]["in"].setInput( __children["FileQuery"]["out"] )
Gaffer.Metadata.registerValue( __children["FileNameFilter"]["in"], 'plugValueWidget:type', '' )
__children["FileNameFilter"]["filterPattern"].setValue( '*.png' )
Gaffer.Metadata.registerValue( __children["FileNameFilter"]["filterPattern"], 'nodule:type', '' )
__children["FileNameFilter"]["Expression"]["__in"]["p0"].setInput( __children["FileNameFilter"]["enabled"] )
__children["FileNameFilter"]["Expression"]["__in"]["p1"].setInput( __children["FileNameFilter"]["filterPattern"] )
__children["FileNameFilter"]["Expression"]["__in"]["p2"].setInput( __children["FileNameFilter"]["in"] )
__children["FileNameFilter"]["Expression"]["__uiPosition"].setValue( imath.V2f( 9.15000057, 2.3499999 ) )
__children["FileNameFilter"]["out"].setInput( __children["FileNameFilter"]["Expression"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["FileNameFilter"]["out"], 'plugValueWidget:type', 'GafferUI.MultiLineStringPlugValueWidget' )
__children["FileNameFilter"]["enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["FileNameFilter"]["enabled"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FileQuery"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["FileQuery"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["FileQuery"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["FileQuery"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["FileQuery"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["FileQuery"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["FileQuery"]["user"], 'layout:section', 'User' )
__children["FileQuery"]["__uiPosition"].setValue( imath.V2f( 35.5388718, 11.749999 ) )
Gaffer.Metadata.registerValue( __children["FileQuery"]["__uiPosition"], 'layout:section', 'Settings' )
__children["FileQuery"]["out"].setInput( __children["FileQuery"]["Expression"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["FileQuery"]["out"], 'plugValueWidget:type', 'GafferUI.MultiLineStringPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["FileQuery"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FileQuery"]["out"], 'layout:index', 1 )
__children["FileQuery"]["filePath"].setValue( '${GAFFER_ROOT}/graphics' )
Gaffer.Metadata.registerValue( __children["FileQuery"]["filePath"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FileQuery"]["filePath"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FileQuery"]["filePath"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["FileQuery"]["filePath"], 'plugValueWidget:type', 'GafferUI.FileSystemPathPlugValueWidget' )
__children["FileQuery"]["Expression"]["__in"]["p0"].setInput( __children["FileQuery"]["filePath"] )
__children["FileQuery"]["Expression"]["__uiPosition"].setValue( imath.V2f( 5.8499999, 5.1500001 ) )
Gaffer.Metadata.registerValue( __children["FileNameFilter1"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["FileNameFilter1"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["FileNameFilter1"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["FileNameFilter1"], 'noduleLayout:customGadget:addButtonRight:visible', False )
__children["FileNameFilter1"]["__uiPosition"].setValue( imath.V2f( 35.538868, -5.25000095 ) )
__children["FileNameFilter1"]["in"].setInput( __children["FileNameFilter"]["out"] )
Gaffer.Metadata.registerValue( __children["FileNameFilter1"]["in"], 'plugValueWidget:type', '' )
__children["FileNameFilter1"]["filterPattern"].setValue( '*Mini*' )
Gaffer.Metadata.registerValue( __children["FileNameFilter1"]["filterPattern"], 'nodule:type', '' )
__children["FileNameFilter1"]["Expression"]["__in"]["p0"].setInput( __children["FileNameFilter1"]["enabled"] )
__children["FileNameFilter1"]["Expression"]["__in"]["p1"].setInput( __children["FileNameFilter1"]["filterPattern"] )
__children["FileNameFilter1"]["Expression"]["__in"]["p2"].setInput( __children["FileNameFilter1"]["in"] )
__children["FileNameFilter1"]["Expression"]["__uiPosition"].setValue( imath.V2f( 9.15000057, 2.3499999 ) )
__children["FileNameFilter1"]["out"].setInput( __children["FileNameFilter1"]["Expression"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["FileNameFilter1"]["out"], 'plugValueWidget:type', 'GafferUI.MultiLineStringPlugValueWidget' )
__children["FileNameFilter1"]["enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["FileNameFilter1"]["enabled"], 'nodule:type', '' )
__children["ImageReader"]["fileName"].setInput( __children["FileNameFilter1"]["out"] )
__children["ImageReader"]["__uiPosition"].setValue( imath.V2f( 35.4152336, -13.719697 ) )
__children["ImageReader1"]["fileName"].setInput( __children["FileIndexFilter"]["out"] )
__children["ImageReader1"]["__uiPosition"].setValue( imath.V2f( 57.1884613, -13.7745562 ) )
__children["ContextQuery"]["queries"][0]["name"].setValue( 'frame' )
__children["ContextQuery"]["__uiPosition"].setValue( imath.V2f( 48.0330963, -5.01795101 ) )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
__children["FileIndexFilter"]["__uiPosition"].setValue( imath.V2f( 57.1113892, -5.25000095 ) )
__children["FileIndexFilter"]["in"].setInput( __children["FileNameFilter"]["out"] )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["in"], 'layout:index', 0 )
__children["FileIndexFilter"]["Expression"]["__in"]["p0"].setInput( __children["FileIndexFilter"]["enabled"] )
__children["FileIndexFilter"]["Expression"]["__in"]["p1"].setInput( __children["FileIndexFilter"]["in"] )
__children["FileIndexFilter"]["Expression"]["__in"]["p2"].setInput( __children["FileIndexFilter"]["index"] )
__children["FileIndexFilter"]["Expression"]["__uiPosition"].setValue( imath.V2f( 9.15000057, 2.3499999 ) )
__children["FileIndexFilter"]["out"].setInput( __children["FileIndexFilter"]["Expression"]["__out"]["p1"] )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["out"], 'plugValueWidget:type', 'GafferUI.MultiLineStringPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["out"], 'layout:index', 3 )
__children["FileIndexFilter"]["enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["enabled"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["enabled"], 'layout:index', 4 )
__children["FileIndexFilter"]["index"].setInput( __children["ContextQuery"]["out"][0]["value"] )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["index"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["index"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["index"], 'layout:index', 1 )
__children["FileIndexFilter"]["count"].setInput( __children["FileIndexFilter"]["Expression"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["count"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["count"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["FileIndexFilter"]["count"], 'layout:index', 2 )
__children["FileNameFilter"]["Expression"]["__engine"].setValue( 'python' )
__children["FileNameFilter"]["Expression"]["__expression"].setValue( 'import fnmatch\n\ninput = parent["__in"]["p2"]\n\nparent["__out"]["p0"] = "\\n".join( fnmatch.filter( input.split(), parent["__in"]["p1"] ) ) if parent["__in"]["p0"] else input' )
__children["FileQuery"]["Expression"]["__engine"].setValue( 'python' )
__children["FileQuery"]["Expression"]["__expression"].setValue( 'import pathlib\n\nqueryPath = pathlib.Path( parent["__in"]["p0"] )\n\nparent["__out"]["p0"] = "\\n".join( sorted( [ p.as_posix() for p in queryPath.glob( "*" ) if p.is_file() ] ) )' )
__children["FileNameFilter1"]["Expression"]["__engine"].setValue( 'python' )
__children["FileNameFilter1"]["Expression"]["__expression"].setValue( 'import fnmatch\n\ninput = parent["__in"]["p2"]\n\nparent["__out"]["p0"] = "\\n".join( fnmatch.filter( input.split(), parent["__in"]["p1"] ) ) if parent["__in"]["p0"] else input' )
__children["FileIndexFilter"]["Expression"]["__engine"].setValue( 'python' )
__children["FileIndexFilter"]["Expression"]["__expression"].setValue( 'input = parent["__in"]["p1"]\n\nvalues = input.split()\ncount = len( values )\nindex = parent["__in"]["p2"] % count\n\nparent["__out"]["p0"] = count\nparent["__out"]["p1"] = values[index] if parent["__in"]["p0"] else input' )


del __children

