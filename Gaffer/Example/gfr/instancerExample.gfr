import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 60, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Instancer"] = GafferScene.Instancer( "Instancer" )
parent.addChild( __children["Instancer"] )
__children["Instancer"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Seeds"] = GafferScene.Seeds( "Seeds" )
parent.addChild( __children["Seeds"] )
__children["Seeds"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cube"] = GafferScene.Cube( "Cube" )
parent.addChild( __children["Cube"] )
__children["Cube"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeInstancePrototypes"] = GafferScene.MergeScenes( "MergeInstancePrototypes" )
parent.addChild( __children["MergeInstancePrototypes"] )
__children["MergeInstancePrototypes"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeInstancePrototypes"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MergeInstancePrototypes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere"] = GafferScene.Sphere( "Sphere" )
parent.addChild( __children["Sphere"] )
__children["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "id", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.IntPlug( "prototypeIndex", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "timeOffset", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject"] = GafferOSL.OSLObject( "OSLObject" )
parent.addChild( __children["OSLObject"] )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "prototypeIndex", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "customFloat", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "primitiveVariable1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InInt"] = GafferOSL.OSLShader( "InInt" )
parent.addChild( __children["InInt"] )
__children["InInt"].loadShader( "ObjectProcessing/InInt" )
__children["InInt"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Text"] = GafferScene.Text( "Text" )
parent.addChild( __children["Text"] )
__children["Text"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FreezeTransform"] = GafferScene.FreezeTransform( "FreezeTransform" )
parent.addChild( __children["FreezeTransform"] )
__children["FreezeTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter2"] = GafferScene.PathFilter( "PathFilter2" )
parent.addChild( __children["PathFilter2"] )
__children["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"] = Gaffer.Expression( "Expression1" )
parent.addChild( __children["Expression1"] )
__children["Expression1"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 'Hello World', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frameRange"]["end"].setValue( 1000 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 41854 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Instancer"]["in"].setInput( __children["OSLObject"]["out"] )
__children["Instancer"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["Instancer"]["prototypes"].setInput( __children["MergeInstancePrototypes"]["out"] )
__children["Instancer"]["prototypeIndex"].setValue( 'prototypeIndex' )
__children["Instancer"]["orientation"].setValue( 'orientation' )
__children["Instancer"]["scale"].setValue( 'scale' )
__children["Instancer"]["attributePrefix"].setValue( 'user:' )
__children["Instancer"]["seedEnabled"].setValue( True )
__children["Instancer"]["timeOffset"]["enabled"].setValue( True )
__children["Instancer"]["timeOffset"]["name"].setValue( 'timeOffset' )
__children["Instancer"]["__uiPosition"].setValue( imath.V2f( -26.9499168, -10.1706123 ) )
__children["Plane"]["transform"]["rotate"].setValue( imath.V3f( 90, 0, 0 ) )
__children["Plane"]["dimensions"]["x"].setValue( 40.0 )
__children["Plane"]["dimensions"]["y"].setInput( __children["Plane"]["dimensions"]["x"] )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( -28.4499168, 28.6963615 ) )
__children["Seeds"]["in"].setInput( __children["FreezeTransform"]["out"] )
__children["Seeds"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Seeds"]["density"].setValue( 0.10000000149011612 )
__children["Seeds"]["__uiPosition"].setValue( imath.V2f( -28.4499168, 12.830513 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( -12.8812246, 18.8861942 ) )
__children["Cube"]["__uiPosition"].setValue( imath.V2f( 12.6399689, 22.8464146 ) )
__children["MergeInstancePrototypes"]["in"][0].setInput( __children["Cube"]["out"] )
__children["MergeInstancePrototypes"]["in"][1].setInput( __children["Sphere"]["out"] )
__children["MergeInstancePrototypes"]["in"][2].setInput( __children["Text"]["out"] )
__children["MergeInstancePrototypes"]["__uiPosition"].setValue( imath.V2f( 17.866848, 12.5698433 ) )
__children["Sphere"]["transform"]["translate"]["y"].setInput( __children["Expression"]["__out"]["p0"] )
__children["Sphere"]["__uiPosition"].setValue( imath.V2f( 25.3105354, 23.1537991 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/plane/seeds' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( -12.798151, 8.81412315 ) )
__children["OSLCode"]["parameters"]["id"].setInput( __children["InInt"]["out"]["value"] )
__children["OSLCode"]["code"].setValue( 'prototypeIndex = id%3;\ntimeOffset = hashnoise( id ) * 40' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -44.54216, 5.09468317 ) )
__children["OSLObject"]["in"].setInput( __children["Seeds"]["out"] )
__children["OSLObject"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode"]["out"]["prototypeIndex"] )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable1"]["name"].setValue( 'timeOffset' )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable1"]["value"].setInput( __children["OSLCode"]["out"]["timeOffset"] )
__children["OSLObject"]["__uiPosition"].setValue( imath.V2f( -28.4499168, 4.6664505 ) )
__children["InInt"]["parameters"]["defaultValue"].setValue( 99 )
__children["InInt"]["__uiPosition"].setValue( imath.V2f( -55.2699432, 5.09468317 ) )
__children["Text"]["transform"]["translate"].setValue( imath.V3f( 0, 0, -1 ) )
__children["Text"]["transform"]["scale"].setValue( imath.V3f( 2, 2, 2 ) )
__children["Text"]["text"].setInput( __children["Expression1"]["__out"]["p0"] )
__children["Text"]["__uiPosition"].setValue( imath.V2f( 45.6381187, 23.1551075 ) )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( 24.6294651, 27.2386532 ) )
__children["FreezeTransform"]["in"].setInput( __children["Plane"]["out"] )
__children["FreezeTransform"]["filter"].setInput( __children["PathFilter2"]["out"] )
__children["FreezeTransform"]["__uiPosition"].setValue( imath.V2f( -28.4499168, 20.532299 ) )
__children["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["PathFilter2"]["__uiPosition"].setValue( imath.V2f( -14.8185692, 26.6143303 ) )
__children["Expression1"]["__uiPosition"].setValue( imath.V2f( 45.4373474, 28.6381187 ) )
__children["Expression"]["__engine"].setValue( 'OSL' )
__children["Expression"]["__expression"].setValue( 'parent.__out.p0 = 10 * abs( sin( time ) ) / time;' )
__children["Expression1"]["__engine"].setValue( 'python' )
__children["Expression1"]["__expression"].setValue( 'parent["__out"]["p0"] = str( context.get( "seed" ) )' )


del __children

