import Gaffer
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 6, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Robot"] = Gaffer.Box( "Robot" )
parent.addChild( __children["Robot"] )
__children["Robot"].addChild( GafferScene.SceneReader( "SceneReader" ) )
__children["Robot"]["SceneReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Robot"].addChild( GafferScene.CustomAttributes( "CustomAttributes" ) )
__children["Robot"]["CustomAttributes"]["attributes"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Robot"]["CustomAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Robot"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["Robot"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Robot"].addChild( GafferScene.CustomAttributes( "CustomAttributes1" ) )
__children["Robot"]["CustomAttributes1"]["attributes"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Robot"]["CustomAttributes1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Robot"].addChild( GafferScene.PathFilter( "PathFilter1" ) )
__children["Robot"]["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Robot"].addChild( GafferScene.CustomAttributes( "CustomAttributes2" ) )
__children["Robot"]["CustomAttributes2"]["attributes"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Robot"]["CustomAttributes2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Robot"].addChild( GafferScene.PathFilter( "PathFilter2" ) )
__children["Robot"]["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Robot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Robot"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Robot"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Robot"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Robot"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CopyAttributes"] = GafferScene.CopyAttributes( "CopyAttributes" )
parent.addChild( __children["CopyAttributes"] )
__children["CopyAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"] = Gaffer.Box( "Materials" )
parent.addChild( __children["Materials"] )
__children["Materials"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"].addChild( GafferScene.OpenGLShader( "FacingRatio" ) )
__children["Materials"]["FacingRatio"].loadShader( "FacingRatio" )
__children["Materials"]["FacingRatio"]["parameters"].addChild( Gaffer.Color3fPlug( "facingColor", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"]["FacingRatio"]["parameters"].addChild( Gaffer.Color3fPlug( "grazingColor", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"]["FacingRatio"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"].addChild( GafferScene.Sphere( "Sphere" ) )
__children["Materials"]["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["Materials"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"].addChild( GafferScene.OpenGLShader( "FacingRatio1" ) )
__children["Materials"]["FacingRatio1"].loadShader( "FacingRatio" )
__children["Materials"]["FacingRatio1"]["parameters"].addChild( Gaffer.Color3fPlug( "facingColor", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"]["FacingRatio1"]["parameters"].addChild( Gaffer.Color3fPlug( "grazingColor", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"]["FacingRatio1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"].addChild( GafferScene.Sphere( "Sphere1" ) )
__children["Materials"]["Sphere1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment1" ) )
__children["Materials"]["ShaderAssignment1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"].addChild( GafferScene.OpenGLShader( "FacingRatio2" ) )
__children["Materials"]["FacingRatio2"].loadShader( "FacingRatio" )
__children["Materials"]["FacingRatio2"]["parameters"].addChild( Gaffer.Color3fPlug( "facingColor", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"]["FacingRatio2"]["parameters"].addChild( Gaffer.Color3fPlug( "grazingColor", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"]["FacingRatio2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"].addChild( GafferScene.Sphere( "Sphere2" ) )
__children["Materials"]["Sphere2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment2" ) )
__children["Materials"]["ShaderAssignment2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Materials"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Materials"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"].addChild( GafferScene.Parent( "Parent" ) )
__children["Materials"]["Parent"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"]["Parent"]["children"].addChild( GafferScene.ScenePlug( "child2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Materials"]["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AttributeQuery"] = GafferScene.AttributeQuery( "AttributeQuery" )
parent.addChild( __children["AttributeQuery"] )
__children["AttributeQuery"].setup( Gaffer.StringPlug( "value", direction = Gaffer.Plug.Direction.Out, defaultValue = '', ) )
__children["AttributeQuery"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frame"].setValue( 37.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 35337 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Robot"]["SceneReader"]["fileName"].setValue( '${GAFFER_ROOT}/resources/gafferBot/caches/gafferBot.scc' )
__children["Robot"]["SceneReader"]["__uiPosition"].setValue( imath.V2f( -5.95000029, 26.4000015 ) )
__children["Robot"]["CustomAttributes"]["in"].setInput( __children["Robot"]["SceneReader"]["out"] )
__children["Robot"]["CustomAttributes"]["filter"].setInput( __children["Robot"]["PathFilter"]["out"] )
__children["Robot"]["CustomAttributes"]["attributes"]["member1"]["name"].setValue( 'material' )
__children["Robot"]["CustomAttributes"]["attributes"]["member1"]["value"].setValue( 'metal' )
__children["Robot"]["CustomAttributes"]["__uiPosition"].setValue( imath.V2f( -5.95085001, 18.235939 ) )
__children["Robot"]["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/GAFFERBOT' ] ) )
__children["Robot"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( 7.99714804, 24.3179703 ) )
__children["Robot"]["CustomAttributes1"]["in"].setInput( __children["Robot"]["CustomAttributes"]["out"] )
__children["Robot"]["CustomAttributes1"]["filter"].setInput( __children["Robot"]["PathFilter1"]["out"] )
__children["Robot"]["CustomAttributes1"]["attributes"]["member1"]["name"].setValue( 'material' )
__children["Robot"]["CustomAttributes1"]["attributes"]["member1"]["value"].setValue( 'chrome' )
__children["Robot"]["CustomAttributes1"]["__uiPosition"].setValue( imath.V2f( -5.95084953, 10.0718765 ) )
__children["Robot"]["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/GAFFERBOT/C_torso_GRP/C_head_GRP/C_head_CPT/C_mouthGrill001_REN', '/GAFFERBOT/C_torso_GRP/L_armUpper_GRP/L_armLower_GRP/L_clawBottom_GRP/L_clawBottom_CPT/L_clawBottom001_REN', '/GAFFERBOT/C_torso_GRP/L_armUpper_GRP/L_armLower_GRP/L_clawTop_GRP/L_clawTop_CPT/L_clawTop001_REN', '/GAFFERBOT/C_torso_GRP/R_armUpper_GRP/R_armLower_GRP/R_clawBottom_GRP/R_clawBottom_CPT/R_clawBottom001_REN', '/GAFFERBOT/C_torso_GRP/R_armUpper_GRP/R_armLower_GRP/R_clawTop_GRP/R_clawTop_CPT/R_clawTop001_REN' ] ) )
__children["Robot"]["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 8.33430672, 16.1539078 ) )
__children["Robot"]["CustomAttributes2"]["in"].setInput( __children["Robot"]["CustomAttributes1"]["out"] )
__children["Robot"]["CustomAttributes2"]["filter"].setInput( __children["Robot"]["PathFilter2"]["out"] )
__children["Robot"]["CustomAttributes2"]["attributes"]["member1"]["name"].setValue( 'material' )
__children["Robot"]["CustomAttributes2"]["attributes"]["member1"]["value"].setValue( 'glass' )
__children["Robot"]["CustomAttributes2"]["__uiPosition"].setValue( imath.V2f( -5.95003986, 1.90781403 ) )
__children["Robot"]["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/GAFFERBOT/C_torso_GRP/C_head_GRP/C_head_CPT/C_headCap001_REN' ] ) )
__children["Robot"]["PathFilter2"]["__uiPosition"].setValue( imath.V2f( 8.33430672, 7.9904952 ) )
__children["Robot"]["__uiPosition"].setValue( imath.V2f( 27.4991474, 0.991867542 ) )
__children["Robot"]["BoxOut"]["in"].setInput( __children["Robot"]["CustomAttributes2"]["out"] )
Gaffer.Metadata.registerValue( __children["Robot"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["Robot"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["Robot"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -4.44932318, -6.42421818 ) )
__children["Robot"]["out"].setInput( __children["Robot"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Robot"]["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["Robot"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["CopyAttributes"]["in"].setInput( __children["Robot"]["out"] )
__children["CopyAttributes"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["CopyAttributes"]["source"].setInput( __children["Materials"]["out"] )
__children["CopyAttributes"]["attributes"].setValue( '*surface' )
__children["CopyAttributes"]["sourceLocation"].setInput( __children["AttributeQuery"]["value"] )
__children["CopyAttributes"]["__uiPosition"].setValue( imath.V2f( 33.7173958, -21.4081326 ) )
__children["Materials"]["__uiPosition"].setValue( imath.V2f( 53.9491501, 2.99186826 ) )
__children["Materials"]["FacingRatio"]["parameters"]["facingColor"].setValue( imath.Color3f( 0, 0.435000002, 0.774999976 ) )
__children["Materials"]["FacingRatio"]["parameters"]["grazingColor"].setValue( imath.Color3f( 0.0793499649, 0, 0.344999999 ) )
__children["Materials"]["FacingRatio"]["__uiPosition"].setValue( imath.V2f( -13.250001, 4 ) )
__children["Materials"]["Sphere"]["name"].setValue( 'metal' )
__children["Materials"]["Sphere"]["transform"]["translate"].setValue( imath.V3f( -2.58938169, 0, 0 ) )
__children["Materials"]["Sphere"]["__uiPosition"].setValue( imath.V2f( 2.26245046, 12.1640625 ) )
__children["Materials"]["ShaderAssignment"]["in"].setInput( __children["Materials"]["Sphere"]["out"] )
__children["Materials"]["ShaderAssignment"]["shader"].setInput( __children["Materials"]["FacingRatio"]["out"] )
__children["Materials"]["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( 2.26245046, 4 ) )
__children["Materials"]["FacingRatio1"]["parameters"]["facingColor"].setValue( imath.Color3f( 0.611999989, 0.696903467, 0.800000012 ) )
__children["Materials"]["FacingRatio1"]["parameters"]["grazingColor"].setValue( imath.Color3f( 0.150000006, 0.298424989, 0.344999999 ) )
__children["Materials"]["FacingRatio1"]["__uiPosition"].setValue( imath.V2f( 18.2827892, 5.41796875 ) )
__children["Materials"]["Sphere1"]["name"].setValue( 'glass' )
__children["Materials"]["Sphere1"]["__uiPosition"].setValue( imath.V2f( 33.7952423, 13.5820312 ) )
__children["Materials"]["ShaderAssignment1"]["in"].setInput( __children["Materials"]["Sphere1"]["out"] )
__children["Materials"]["ShaderAssignment1"]["shader"].setInput( __children["Materials"]["FacingRatio1"]["out"] )
__children["Materials"]["ShaderAssignment1"]["__uiPosition"].setValue( imath.V2f( 33.7952423, 5.41796875 ) )
__children["Materials"]["FacingRatio2"]["parameters"]["facingColor"].setValue( imath.Color3f( 0.774999976, 0.774999976, 0.774999976 ) )
__children["Materials"]["FacingRatio2"]["parameters"]["grazingColor"].setValue( imath.Color3f( 0.344999999, 0.344999999, 0.344999999 ) )
__children["Materials"]["FacingRatio2"]["__uiPosition"].setValue( imath.V2f( 50.9827957, 7.11796904 ) )
__children["Materials"]["Sphere2"]["name"].setValue( 'chrome' )
__children["Materials"]["Sphere2"]["transform"]["translate"].setValue( imath.V3f( 2.86177087, 0, 0 ) )
__children["Materials"]["Sphere2"]["__uiPosition"].setValue( imath.V2f( 66.495224, 15.2820311 ) )
__children["Materials"]["ShaderAssignment2"]["in"].setInput( __children["Materials"]["Sphere2"]["out"] )
__children["Materials"]["ShaderAssignment2"]["shader"].setInput( __children["Materials"]["FacingRatio2"]["out"] )
__children["Materials"]["ShaderAssignment2"]["__uiPosition"].setValue( imath.V2f( 66.495224, 7.11796904 ) )
__children["Materials"]["BoxOut"]["in"].setInput( __children["Materials"]["Parent"]["out"] )
Gaffer.Metadata.registerValue( __children["Materials"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["Materials"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["Materials"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 5.26311874, -22.1320324 ) )
__children["Materials"]["out"].setInput( __children["Materials"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Materials"]["out"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["Materials"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["Materials"]["Parent"]["in"].setInput( __children["Materials"]["ShaderAssignment"]["out"] )
__children["Materials"]["Parent"]["parent"].setValue( '/' )
__children["Materials"]["Parent"]["children"][0].setInput( __children["Materials"]["ShaderAssignment1"]["out"] )
__children["Materials"]["Parent"]["children"][1].setInput( __children["Materials"]["ShaderAssignment2"]["out"] )
__children["Materials"]["Parent"]["__uiPosition"].setValue( imath.V2f( 5.26245022, -10.885334 ) )
__children["AttributeQuery"]["scene"].setInput( __children["Robot"]["out"] )
__children["AttributeQuery"]["location"].setValue( '${scene:path}' )
__children["AttributeQuery"]["attribute"].setValue( 'material' )
__children["AttributeQuery"]["__uiPosition"].setValue( imath.V2f( 61.5491524, -7.34016371 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/...' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 49.6930466, -16.6255054 ) )


del __children

