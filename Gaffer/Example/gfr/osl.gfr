import Gaffer
import GafferAppleseed
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 57, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 1, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.Color3fPlug( "a", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.Color3fPlug( "b", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "width", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "output1", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLImage"] = GafferOSL.OSLImage( "OSLImage" )
parent.addChild( __children["OSLImage"] )
__children["OSLImage"]["channels"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject"] = GafferOSL.OSLObject( "OSLObject" )
parent.addChild( __children["OSLObject"] )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "P", Gaffer.V3fPlug( "value", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InPoint"] = GafferOSL.OSLShader( "InPoint" )
parent.addChild( __children["InPoint"] )
__children["InPoint"].loadShader( "ObjectProcessing/InPoint" )
__children["InPoint"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment"] = GafferScene.ShaderAssignment( "ShaderAssignment" )
parent.addChild( __children["ShaderAssignment"] )
__children["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( Gaffer.Color3fPlug( "in", defaultValue = imath.Color3f( 0, 0, 0 ), ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"] = GafferScene.Parent( "Parent" )
parent.addChild( __children["Parent"] )
__children["Parent"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["diffuse_edf"] = GafferAppleseed.AppleseedLight( "diffuse_edf" )
parent.addChild( __children["diffuse_edf"] )
__children["diffuse_edf"].loadShader( "diffuse_edf" )
__children["diffuse_edf"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InteractiveAppleseedRender"] = GafferAppleseed.InteractiveAppleseedRender( "InteractiveAppleseedRender" )
parent.addChild( __children["InteractiveAppleseedRender"] )
__children["InteractiveAppleseedRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InNormal"] = GafferOSL.OSLShader( "InNormal" )
parent.addChild( __children["InNormal"] )
__children["InNormal"].loadShader( "ObjectProcessing/InNormal" )
__children["InNormal"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddVector1"] = GafferOSL.OSLShader( "AddVector1" )
parent.addChild( __children["AddVector1"] )
__children["AddVector1"].loadShader( "Maths/AddVector" )
__children["AddVector1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Sphere1"] = GafferScene.Sphere( "Sphere1" )
parent.addChild( __children["Sphere1"] )
__children["Sphere1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MultiplyVector"] = GafferOSL.OSLShader( "MultiplyVector" )
parent.addChild( __children["MultiplyVector"] )
__children["MultiplyVector"].loadShader( "Maths/MultiplyVector" )
__children["MultiplyVector"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DeletePrimitiveVariables"] = GafferScene.DeletePrimitiveVariables( "DeletePrimitiveVariables" )
parent.addChild( __children["DeletePrimitiveVariables"] )
__children["DeletePrimitiveVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"] = GafferImage.Merge( "Merge" )
parent.addChild( __children["Merge"] )
__children["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Text"] = GafferImage.Text( "Text" )
parent.addChild( __children["Text"] )
__children["Text"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot1"] = Gaffer.Dot( "Dot1" )
parent.addChild( __children["Dot1"] )
__children["Dot1"].setup( Gaffer.FloatPlug( "in", defaultValue = 0.0, ) )
__children["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot2"] = Gaffer.Dot( "Dot2" )
parent.addChild( __children["Dot2"] )
__children["Dot2"].setup( Gaffer.Color3fPlug( "in", defaultValue = imath.Color3f( 0, 0, 0 ), ) )
__children["Dot2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot3"] = Gaffer.Dot( "Dot3" )
parent.addChild( __children["Dot3"] )
__children["Dot3"].setup( Gaffer.Color3fPlug( "in", defaultValue = imath.Color3f( 0, 0, 0 ), ) )
__children["Dot3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_disney_material"] = GafferOSL.OSLShader( "as_disney_material" )
parent.addChild( __children["as_disney_material"] )
__children["as_disney_material"].loadShader( "as_disney_material" )
__children["as_disney_material"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_closure2surface"] = GafferOSL.OSLShader( "as_closure2surface" )
parent.addChild( __children["as_closure2surface"] )
__children["as_closure2surface"].loadShader( "as_closure2surface" )
__children["as_closure2surface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 59625 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["OSLCode"]["parameters"]["a"].setValue( imath.Color3f( 0.665000021, 0.485000014, 0.121250004 ) )
__children["OSLCode"]["parameters"]["b"].setValue( imath.Color3f( 0.379999995, 0.0399999991, 0.119699985 ) )
__children["OSLCode"]["parameters"]["width"].setValue( 0.10000000149011612 )
Gaffer.Metadata.registerValue( __children["OSLCode"]["out"]["output1"], 'compoundNumericNodule:childrenVisible', True )
__children["OSLCode"]["code"].setValue( 'float vv = v + 0.05 * pnoise( u * 20, 4 );\nfloat m = aastep( 0, sin( vv * M_PI / width ) );\noutput1 = mix( a, b, m );' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -75.8756332, 75.9638748 ) )
__children["OSLImage"]["defaultFormat"].setValue( GafferImage.Format( 512, 512, 1.000 ) )
Gaffer.Metadata.registerValue( __children["OSLImage"]["defaultFormat"], 'formatPlugValueWidget:mode', 'custom' )
__children["OSLImage"]["channels"]["channel"]["value"].setInput( __children["Dot3"]["out"] )
__children["OSLImage"]["__uiPosition"].setValue( imath.V2f( -52.5298271, 65.2473907 ) )
__children["OSLObject"]["in"].setInput( __children["Sphere1"]["out"] )
__children["OSLObject"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["AddVector1"]["out"]["out"] )
__children["OSLObject"]["__uiPosition"].setValue( imath.V2f( 21.8113308, 77.6633301 ) )
__children["InPoint"]["__uiPosition"].setValue( imath.V2f( -4.62568092, 84.7770309 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 34.8595734, 85.8364029 ) )
__children["ShaderAssignment"]["in"].setInput( __children["DeletePrimitiveVariables"]["out"] )
__children["ShaderAssignment"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["ShaderAssignment"]["shader"].setInput( __children["as_closure2surface"]["out"] )
__children["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( 21.8113308, 43.9708252 ) )
__children["Dot"]["in"].setInput( __children["Dot3"]["out"] )
Gaffer.Metadata.registerValue( __children["Dot"]["in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Dot"]["out"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["Dot"]["out"], 'compoundNumericNodule:childrenVisible', True )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( -35.4423218, 75.9638748 ) )
__children["Outputs"]["in"].setInput( __children["Parent"]["out"] )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Beauty' )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( 23.3113308, -15.6963844 ) )
__children["StandardOptions"]["in"].setInput( __children["Outputs"]["out"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/group/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["renderResolution"]["value"].setValue( imath.V2i( 512, 512 ) )
__children["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( 23.3113308, -21.3604622 ) )
__children["Camera"]["transform"]["translate"].setValue( imath.V3f( -48.2480354, -51.651329, 54.1808281 ) )
__children["Camera"]["transform"]["rotate"].setValue( imath.V3f( 35.5233841, -41.8259201, 3.41509462e-06 ) )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( 30.8510246, 15.7729855 ) )
__children["Parent"]["in"].setInput( __children["ShaderAssignment"]["out"] )
__children["Parent"]["parent"].setValue( '/' )
__children["Parent"]["children"][0].setInput( __children["Group"]["out"] )
__children["Parent"]["__uiPosition"].setValue( imath.V2f( 23.3113308, -7.53232956 ) )
__children["Group"]["in"][0].setInput( __children["Camera"]["out"] )
__children["Group"]["in"][1].setInput( __children["diffuse_edf"]["out"] )
__children["Group"]["__uiPosition"].setValue( imath.V2f( 30.8510246, 0.631725311 ) )
__children["diffuse_edf"]["transform"]["translate"].setValue( imath.V3f( -39.3996429, 100.444008, 55.0566216 ) )
__children["diffuse_edf"]["transform"]["rotate"].setValue( imath.V3f( -50.9932365, -26.35606, -1.70754731e-06 ) )
__children["diffuse_edf"]["transform"]["scale"].setValue( imath.V3f( 33.5077057, 33.5077057, 33.5077057 ) )
__children["diffuse_edf"]["parameters"]["radiance_multiplier"].setValue( 10.0 )
__children["diffuse_edf"]["__uiPosition"].setValue( imath.V2f( 38.1087303, 8.79579163 ) )
Gaffer.MetadataAlgo.setNumericBookmark( __children["InteractiveAppleseedRender"].scriptNode(), 1, __children["InteractiveAppleseedRender"] )
__children["InteractiveAppleseedRender"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["InteractiveAppleseedRender"]["__uiPosition"].setValue( imath.V2f( 23.3113308, -29.5245171 ) )
Gaffer.MetadataAlgo.setNumericBookmark( __children["Catalogue"].scriptNode(), 2, __children["Catalogue"] )
__children["Catalogue"]["images"]["Image"]["fileName"].setValue( '/Users/tom-dev/gaffer/projects/default/catalogues/OSL/19eade7b61f17406e2d6e18fb09354e7.exr' )
__children["Catalogue"]["images"]["Image1"]["fileName"].setValue( '/Users/tom-dev/gaffer/projects/default/catalogues/OSL/27bae304dc44e6b7b4d9b54b8eb3dfc7.exr' )
Gaffer.Metadata.registerValue( __children["Catalogue"]["images"]["Image2"], 'image:index', 2 )
__children["Catalogue"]["images"]["Image2"]["fileName"].setValue( '/Users/tom-dev/gaffer/projects/default/catalogues/OSL/1cd5a362b803eaff1f1729f9aa15e3ba.exr' )
__children["Catalogue"]["images"]["Image3"]["fileName"].setValue( '/Users/tom-dev/gaffer/projects/default/catalogues/OSL/3d5ebd22cf0e074a418cebf44c410f4c.exr' )
__children["Catalogue"]["imageIndex"].setValue( 3 )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/${script:name}' )
__children["Catalogue"]["__mapping"].setValue( IECore.CompoundData({'Image':IECore.IntData( 0 ),'Image1':IECore.IntData( 1 ),'Image2':IECore.IntData( 2 ),'Image3':IECore.IntData( 3 )}) )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( 22.3249397, -38.3411026 ) )
__children["InNormal"]["__uiPosition"].setValue( imath.V2f( -20.2919407, 82.5079422 ) )
__children["AddVector1"]["parameters"]["a"].setInput( __children["InPoint"]["out"]["value"] )
__children["AddVector1"]["parameters"]["b"].setInput( __children["MultiplyVector"]["out"]["out"] )
__children["AddVector1"]["__uiPosition"].setValue( imath.V2f( 7.57329369, 80.3543777 ) )
__children["Sphere1"]["radius"].setValue( 20.0 )
__children["Sphere1"]["divisions"].setValue( imath.V2i( 128, 128 ) )
__children["Sphere1"]["__uiPosition"].setValue( imath.V2f( 21.8113308, 87.9184341 ) )
__children["MultiplyVector"]["parameters"]["a"].setInput( __children["InNormal"]["out"]["value"] )
Gaffer.Metadata.registerValue( __children["MultiplyVector"]["parameters"]["b"], 'compoundNumericNodule:childrenVisible', True )
__children["MultiplyVector"]["parameters"]["b"]["x"].setInput( __children["Dot1"]["out"] )
__children["MultiplyVector"]["parameters"]["b"]["y"].setInput( __children["Dot1"]["out"] )
__children["MultiplyVector"]["parameters"]["b"]["z"].setInput( __children["Dot1"]["out"] )
__children["MultiplyVector"]["__uiPosition"].setValue( imath.V2f( -6.73212624, 76.5638657 ) )
__children["DeletePrimitiveVariables"]["in"].setInput( __children["OSLObject"]["out"] )
__children["DeletePrimitiveVariables"]["names"].setValue( 'N' )
__children["DeletePrimitiveVariables"]["__uiPosition"].setValue( imath.V2f( 21.8113308, 63.133194 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/sphere' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 36.0835495, 50.0537109 ) )
__children["Merge"]["in"][0].setInput( __children["OSLImage"]["out"] )
__children["Merge"]["in"][1].setInput( __children["Text"]["out"] )
__children["Merge"]["__uiPosition"].setValue( imath.V2f( -46.7843208, 56.7378922 ) )
__children["Text"]["out"].setInput( __children["Text"]["__merge"]["out"] )
__children["Text"]["text"].setValue( 'OSL' )
__children["Text"]["size"].setValue( imath.V2i( 240, 240 ) )
__children["Text"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 512, 512 ) ) )
__children["Text"]["horizontalAlignment"].setValue( 2 )
__children["Text"]["verticalAlignment"].setValue( 2 )
__children["Text"]["__uiPosition"].setValue( imath.V2f( -39.8266563, 64.9019547 ) )
__children["Dot1"]["in"].setInput( __children["Dot"]["out"]["g"] )
Gaffer.Metadata.registerValue( __children["Dot1"]["in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Dot1"]["out"], 'noduleLayout:section', 'right' )
__children["Dot1"]["__uiPosition"].setValue( imath.V2f( -17.799509, 75.9638748 ) )
__children["Dot2"]["in"].setInput( __children["Dot"]["out"] )
Gaffer.Metadata.registerValue( __children["Dot2"]["in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Dot2"]["out"], 'noduleLayout:section', 'right' )
__children["Dot2"]["__uiPosition"].setValue( imath.V2f( -28.4423218, 46.8082275 ) )
__children["Dot3"]["in"].setInput( __children["OSLCode"]["out"]["output1"] )
Gaffer.Metadata.registerValue( __children["Dot3"]["in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Dot3"]["out"], 'noduleLayout:section', 'right' )
__children["Dot3"]["__uiPosition"].setValue( imath.V2f( -63.5298271, 75.9638748 ) )
__children["as_disney_material"]["parameters"]["in_color"].setInput( __children["Dot2"]["out"] )
__children["as_disney_material"]["__uiPosition"].setValue( imath.V2f( -16.1596069, 38.408226 ) )
__children["as_closure2surface"]["parameters"]["in_input"].setInput( __children["as_disney_material"]["out"]["out_outColor"] )
__children["as_closure2surface"]["__uiPosition"].setValue( imath.V2f( 2.37609053, 39.7927933 ) )


del __children

