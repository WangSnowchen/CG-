import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Seeds"] = GafferScene.Seeds( "Seeds" )
parent.addChild( __children["Seeds"] )
__children["Seeds"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SubTree"] = GafferScene.SubTree( "SubTree" )
parent.addChild( __children["SubTree"] )
__children["SubTree"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject"] = GafferOSL.OSLObject( "OSLObject" )
parent.addChild( __children["OSLObject"] )
__children["OSLObject"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "P", Gaffer.V3fPlug( "value", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InPoint"] = GafferOSL.OSLShader( "InPoint" )
parent.addChild( __children["InPoint"] )
__children["InPoint"].loadShader( "ObjectProcessing/InPoint" )
__children["InPoint"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.V3fPlug( "inPoint", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode"]["out"].addChild( Gaffer.V3fPlug( "outPoint", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Transform"] = GafferScene.Transform( "Transform" )
parent.addChild( __children["Transform"] )
__children["Transform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FreezeTransform"] = GafferScene.FreezeTransform( "FreezeTransform" )
parent.addChild( __children["FreezeTransform"] )
__children["FreezeTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TimeWarp"] = Gaffer.TimeWarp( "TimeWarp" )
parent.addChild( __children["TimeWarp"] )
__children["TimeWarp"].setup( GafferScene.ScenePlug( "in", ) )
__children["TimeWarp"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CopyPrimitiveVariables"] = GafferScene.CopyPrimitiveVariables( "CopyPrimitiveVariables" )
parent.addChild( __children["CopyPrimitiveVariables"] )
__children["CopyPrimitiveVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLObject1"] = GafferOSL.OSLObject( "OSLObject1" )
parent.addChild( __children["OSLObject1"] )
__children["OSLObject1"]["primitiveVariables"].addChild( Gaffer.NameValuePlug( "velocity", Gaffer.V3fPlug( "value", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ), True, "primitiveVariable", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLObject1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InPoint1"] = GafferOSL.OSLShader( "InPoint1" )
parent.addChild( __children["InPoint1"] )
__children["InPoint1"].loadShader( "ObjectProcessing/InPoint" )
__children["InPoint1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InPoint2"] = GafferOSL.OSLShader( "InPoint2" )
parent.addChild( __children["InPoint2"] )
__children["InPoint2"].loadShader( "ObjectProcessing/InPoint" )
__children["InPoint2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SubtractVector"] = GafferOSL.OSLShader( "SubtractVector" )
parent.addChild( __children["SubtractVector"] )
__children["SubtractVector"].loadShader( "Maths/SubtractVector" )
__children["SubtractVector"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Orientation"] = GafferScene.Orientation( "Orientation" )
parent.addChild( __children["Orientation"] )
__children["Orientation"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Instancer"] = GafferScene.Instancer( "Instancer" )
parent.addChild( __children["Instancer"] )
__children["Instancer"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferScene.FilterPlug( "in", defaultValue = 0, minValue = 0, maxValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.AcceptsDependencyCycles, ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Cube"] = GafferScene.Cube( "Cube" )
parent.addChild( __children["Cube"] )
__children["Cube"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frameRange"]["end"].setValue( 1000 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 65248 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( -9.5, 2.25 ) )
__children["Seeds"]["in"].setInput( __children["Plane"]["out"] )
__children["Seeds"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Seeds"]["name"].setValue( 'points' )
__children["Seeds"]["density"].setValue( 12.0 )
__children["Seeds"]["__uiPosition"].setValue( imath.V2f( -9.50000095, -5.9140625 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 3.5, 0.167968586 ) )
__children["SubTree"]["in"].setInput( __children["Seeds"]["out"] )
__children["SubTree"]["root"].setValue( '/plane/points' )
__children["SubTree"]["includeRoot"].setValue( True )
__children["SubTree"]["__uiPosition"].setValue( imath.V2f( -9.49917603, -14.078125 ) )
__children["OSLObject"]["in"].setInput( __children["SubTree"]["out"] )
__children["OSLObject"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["OSLObject"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["OSLCode"]["out"]["outPoint"] )
__children["OSLObject"]["__uiPosition"].setValue( imath.V2f( -9.49917603, -24.4959641 ) )
__children["InPoint"]["__uiPosition"].setValue( imath.V2f( -40.4268074, -23.8959637 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/points' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 3.50082374, -18.4132881 ) )
__children["OSLCode"]["parameters"]["inPoint"].setInput( __children["InPoint"]["out"]["value"] )
__children["OSLCode"]["code"].setValue( 'outPoint = inPoint + vector( 0, sin( time ), 0 );' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -29.0037117, -23.8959637 ) )
__children["Transform"]["in"].setInput( __children["OSLObject"]["out"] )
__children["Transform"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["Transform"]["transform"]["translate"]["z"].setInput( __children["Expression"]["__out"]["p0"] )
__children["Transform"]["__uiPosition"].setValue( imath.V2f( -9.49829102, -32.6600266 ) )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( -19.3782578, -32.3586578 ) )
__children["FreezeTransform"]["in"].setInput( __children["Transform"]["out"] )
__children["FreezeTransform"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["FreezeTransform"]["__uiPosition"].setValue( imath.V2f( -9.49745178, -40.8240891 ) )
__children["TimeWarp"]["offset"].setValue( 1.0 )
__children["TimeWarp"]["in"].setInput( __children["FreezeTransform"]["out"] )
__children["TimeWarp"]["__uiPosition"].setValue( imath.V2f( 3.87584543, -48.9881516 ) )
__children["CopyPrimitiveVariables"]["in"].setInput( __children["FreezeTransform"]["out"] )
__children["CopyPrimitiveVariables"]["filter"].setInput( __children["Dot"]["out"] )
__children["CopyPrimitiveVariables"]["source"].setInput( __children["TimeWarp"]["out"] )
__children["CopyPrimitiveVariables"]["primitiveVariables"].setValue( 'P' )
__children["CopyPrimitiveVariables"]["sourceLocation"].setValue( '/points' )
__children["CopyPrimitiveVariables"]["prefix"].setValue( 'timeWarped:' )
__children["CopyPrimitiveVariables"]["__uiPosition"].setValue( imath.V2f( -7.99745178, -59.105484 ) )
__children["OSLObject1"]["in"].setInput( __children["CopyPrimitiveVariables"]["out"] )
__children["OSLObject1"]["filter"].setInput( __children["Dot"]["out"] )
__children["OSLObject1"]["primitiveVariables"]["primitiveVariable"]["value"].setInput( __children["SubtractVector"]["out"]["out"] )
__children["OSLObject1"]["__uiPosition"].setValue( imath.V2f( -7.99827909, -67.2695465 ) )
__children["InPoint1"]["__uiPosition"].setValue( imath.V2f( -38.5121078, -61.3539391 ) )
__children["InPoint2"]["parameters"]["name"].setValue( 'timeWarped:P' )
__children["InPoint2"]["__uiPosition"].setValue( imath.V2f( -38.5121078, -68.1892548 ) )
__children["SubtractVector"]["parameters"]["a"].setInput( __children["InPoint1"]["out"]["value"] )
__children["SubtractVector"]["parameters"]["b"].setInput( __children["InPoint2"]["out"]["value"] )
__children["SubtractVector"]["__uiPosition"].setValue( imath.V2f( -23.7330475, -63.1878052 ) )
__children["Orientation"]["in"].setInput( __children["OSLObject1"]["out"] )
__children["Orientation"]["filter"].setInput( __children["Dot"]["out"] )
__children["Orientation"]["inMode"].setValue( 3 )
__children["Orientation"]["inXAxis"].setValue( 'velocity' )
__children["Orientation"]["__uiPosition"].setValue( imath.V2f( -7.99910164, -75.433609 ) )
__children["Instancer"]["in"].setInput( __children["Orientation"]["out"] )
__children["Instancer"]["filter"].setInput( __children["Dot"]["out"] )
__children["Instancer"]["prototypes"].setInput( __children["Cube"]["out"] )
__children["Instancer"]["prototypeIndex"].setValue( 'prototypeIndex' )
__children["Instancer"]["orientation"].setValue( 'orientation' )
__children["Instancer"]["scale"].setValue( 'scale' )
__children["Instancer"]["attributePrefix"].setValue( 'user:' )
__children["Instancer"]["__uiPosition"].setValue( imath.V2f( -6.49910164, -94.2985992 ) )
__children["Dot"]["in"].setInput( __children["PathFilter1"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( 25.3515682, -47.3487244 ) )
__children["Cube"]["dimensions"].setValue( imath.V3f( 1, 0.100000001, 0.100000001 ) )
__children["Cube"]["__uiPosition"].setValue( imath.V2f( -0.446588576, -83.1794891 ) )
__children["Expression"]["__engine"].setValue( 'OSL' )
__children["Expression"]["__expression"].setValue( 'parent.__out.p0 = -0.5 * time;' )


del __children

