import Gaffer
import GafferOSL
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 14, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["FloatSpline"] = GafferOSL.OSLShader( "FloatSpline" )
parent.addChild( __children["FloatSpline"] )
__children["FloatSpline"].loadShader( "Pattern/FloatSpline" )
__children["FloatSpline"]["parameters"]["spline"].clearPoints()
__children["FloatSpline"]["parameters"]["spline"].addChild( Gaffer.ValuePlug( "p0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FloatSpline"]["parameters"]["spline"]["p0"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FloatSpline"]["parameters"]["spline"]["p0"].addChild( Gaffer.FloatPlug( "y", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FloatSpline"]["parameters"]["spline"].addChild( Gaffer.ValuePlug( "p1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FloatSpline"]["parameters"]["spline"]["p1"].addChild( Gaffer.FloatPlug( "x", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FloatSpline"]["parameters"]["spline"]["p1"].addChild( Gaffer.FloatPlug( "y", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FloatSpline"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ColorToFloat"] = GafferOSL.OSLShader( "ColorToFloat" )
parent.addChild( __children["ColorToFloat"] )
__children["ColorToFloat"].loadShader( "Conversion/ColorToFloat" )
__children["ColorToFloat"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InPoint"] = GafferOSL.OSLShader( "InPoint" )
parent.addChild( __children["InPoint"] )
__children["InPoint"].loadShader( "ObjectProcessing/InPoint" )
__children["InPoint"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AddVector"] = GafferOSL.OSLShader( "AddVector" )
parent.addChild( __children["AddVector"] )
__children["AddVector"].loadShader( "Maths/AddVector" )
__children["AddVector"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FloatToVector"] = GafferOSL.OSLShader( "FloatToVector" )
parent.addChild( __children["FloatToVector"] )
__children["FloatToVector"].loadShader( "Conversion/FloatToVector" )
__children["FloatToVector"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["VectorToFloat"] = GafferOSL.OSLShader( "VectorToFloat" )
parent.addChild( __children["VectorToFloat"] )
__children["VectorToFloat"].loadShader( "Conversion/VectorToFloat" )
__children["VectorToFloat"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MultiplyColor"] = GafferOSL.OSLShader( "MultiplyColor" )
parent.addChild( __children["MultiplyColor"] )
__children["MultiplyColor"].loadShader( "Maths/MultiplyColor" )
__children["MultiplyColor"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PowFloat1"] = GafferOSL.OSLShader( "PowFloat1" )
parent.addChild( __children["PowFloat1"] )
__children["PowFloat1"].loadShader( "Maths/PowFloat" )
__children["PowFloat1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FloatSpline"]["parameters"]["spline"]["p0"]["y"].setValue( 1.0 )
__children["FloatSpline"]["parameters"]["spline"]["p1"]["x"].setValue( 0.38983049988746643 )
__children["FloatSpline"]["parameters"]["spline"]["p1"]["y"].setValue( 0.0 )
__children["FloatSpline"]["parameters"]["direction"].setValue( 'v' )
__children["FloatSpline"]["__uiPosition"].setValue( imath.V2f( -90.5259399, -2.36890078 ) )
__children["ColorToFloat"]["parameters"]["c"].setInput( __children["MultiplyColor"]["out"]["out"] )
__children["ColorToFloat"]["__uiPosition"].setValue( imath.V2f( -59.7117233, -2.96890068 ) )
__children["InPoint"]["__uiPosition"].setValue( imath.V2f( -58.8099022, -8.89824486 ) )
__children["AddVector"]["parameters"]["a"].setInput( __children["InPoint"]["out"]["value"] )
__children["AddVector"]["parameters"]["b"].setInput( __children["FloatToVector"]["out"]["p"] )
__children["AddVector"]["__uiPosition"].setValue( imath.V2f( -9.26094151, -9.49824524 ) )
__children["FloatToVector"]["parameters"]["x"].setInput( __children["VectorToFloat"]["out"]["x"] )
__children["FloatToVector"]["parameters"]["y"].setInput( __children["PowFloat1"]["out"]["out"] )
__children["FloatToVector"]["parameters"]["z"].setInput( __children["VectorToFloat"]["out"]["z"] )
__children["FloatToVector"]["__uiPosition"].setValue( imath.V2f( -24.8194332, -23.4802284 ) )
__children["VectorToFloat"]["parameters"]["p"].setInput( __children["InPoint"]["out"]["value"] )
__children["VectorToFloat"]["__uiPosition"].setValue( imath.V2f( -45.9876366, -23.4802265 ) )
__children["MultiplyColor"]["parameters"]["a"].setInput( __children["FloatSpline"]["out"]["c"] )
__children["MultiplyColor"]["parameters"]["b"]["r"].setValue( 1.9320000410079956 )
__children["MultiplyColor"]["parameters"]["b"]["g"].setInput( __children["MultiplyColor"]["parameters"]["b"]["r"] )
__children["MultiplyColor"]["parameters"]["b"]["b"].setInput( __children["MultiplyColor"]["parameters"]["b"]["r"] )
__children["MultiplyColor"]["__uiPosition"].setValue( imath.V2f( -73.9133835, -2.96890068 ) )
__children["PowFloat1"]["parameters"]["base"].setInput( __children["ColorToFloat"]["out"]["g"] )
__children["PowFloat1"]["parameters"]["power"].setValue( 5.716300010681152 )
__children["PowFloat1"]["__uiPosition"].setValue( imath.V2f( -38.5196304, -3.56890059 ) )


del __children

