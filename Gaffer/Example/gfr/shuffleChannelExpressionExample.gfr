import Gaffer
import GafferImage
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["openColorIO"] = GafferImage.OpenColorIOConfigPlug( "openColorIO", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["openColorIO"] )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["White"] = GafferImage.Constant( "White" )
parent.addChild( __children["White"] )
__children["White"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Blue"] = GafferImage.Constant( "Blue" )
parent.addChild( __children["Blue"] )
__children["Blue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"] = GafferImage.Shuffle( "Shuffle" )
parent.addChild( __children["Shuffle"] )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"] = GafferImage.Merge( "Merge" )
parent.addChild( __children["Merge"] )
__children["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"]["in"].addChild( GafferImage.ImagePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Checkerboard"] = GafferImage.Checkerboard( "Checkerboard" )
parent.addChild( __children["Checkerboard"] )
__children["Checkerboard"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextVariables_Checker"] = Gaffer.ContextVariables( "ContextVariables_Checker" )
parent.addChild( __children["ContextVariables_Checker"] )
__children["ContextVariables_Checker"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContextVariables_Checker"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables_Checker"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.StringPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.StringPlug( "p3", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextVariables_Blue"] = Gaffer.ContextVariables( "ContextVariables_Blue" )
parent.addChild( __children["ContextVariables_Blue"] )
__children["ContextVariables_Blue"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContextVariables_Blue"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables_Blue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextVariables_Unknown"] = Gaffer.ContextVariables( "ContextVariables_Unknown" )
parent.addChild( __children["ContextVariables_Unknown"] )
__children["ContextVariables_Unknown"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContextVariables_Unknown"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables_Unknown"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferImage.ImagePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DeleteChannels"] = GafferImage.DeleteChannels( "DeleteChannels" )
parent.addChild( __children["DeleteChannels"] )
__children["DeleteChannels"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 63695 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["White"]["color"].setValue( imath.Color4f( 1, 1, 1, 1 ) )
__children["White"]["__uiPosition"].setValue( imath.V2f( -18.7500019, 10.5499992 ) )
__children["Blue"]["color"].setValue( imath.Color4f( 0, 0, 1, 1 ) )
__children["Blue"]["layer"].setValue( 'blue' )
__children["Blue"]["__uiPosition"].setValue( imath.V2f( -4.49964714, 10.5499992 ) )
__children["Shuffle"]["in"].setInput( __children["Merge"]["out"] )
__children["Shuffle"]["channels"]["channel"]["out"].setValue( 'R' )
__children["Shuffle"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["Shuffle"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["Shuffle"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["Shuffle"]["channels"]["channel"]["in"].setInput( __children["Expression"]["__out"]["p0"] )
__children["Shuffle"]["channels"]["channel1"]["in"].setInput( __children["Expression"]["__out"]["p1"] )
__children["Shuffle"]["channels"]["channel2"]["in"].setInput( __children["Expression"]["__out"]["p2"] )
__children["Shuffle"]["channels"]["channel3"]["in"].setInput( __children["Expression"]["__out"]["p3"] )
__children["Shuffle"]["__uiPosition"].setValue( imath.V2f( -2.99964762, -5.77812576 ) )
__children["Merge"]["in"][0].setInput( __children["White"]["out"] )
__children["Merge"]["in"][1].setInput( __children["Blue"]["out"] )
__children["Merge"]["in"][2].setInput( __children["Checkerboard"]["out"] )
__children["Merge"]["operation"].setValue( 8 )
__children["Merge"]["__uiPosition"].setValue( imath.V2f( -2.99964762, 2.38593674 ) )
__children["Checkerboard"]["size"]["y"].setInput( __children["Checkerboard"]["size"]["x"] )
__children["Checkerboard"]["layer"].setValue( 'checker' )
__children["Checkerboard"]["__uiPosition"].setValue( imath.V2f( 8.94999504, 10.5499992 ) )
__children["ContextVariables_Checker"]["variables"]["member1"]["name"].setValue( 'myLayer' )
__children["ContextVariables_Checker"]["variables"]["member1"]["value"].setValue( 'checker' )
__children["ContextVariables_Checker"]["in"].setInput( __children["DeleteChannels"]["out"] )
__children["ContextVariables_Checker"]["__uiPosition"].setValue( imath.V2f( 15.3995266, -22.1062508 ) )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( -10.2665329, -5.65033484 ) )
__children["ContextVariables_Blue"]["variables"]["member1"]["name"].setValue( 'myLayer' )
__children["ContextVariables_Blue"]["variables"]["member1"]["value"].setValue( 'blue' )
__children["ContextVariables_Blue"]["in"].setInput( __children["DeleteChannels"]["out"] )
__children["ContextVariables_Blue"]["__uiPosition"].setValue( imath.V2f( -2.99964762, -22.1062508 ) )
__children["ContextVariables_Unknown"]["variables"]["member1"]["name"].setValue( 'myLayer' )
__children["ContextVariables_Unknown"]["variables"]["member1"]["value"].setValue( 'unknown' )
__children["ContextVariables_Unknown"]["in"].setInput( __children["DeleteChannels"]["out"] )
__children["ContextVariables_Unknown"]["__uiPosition"].setValue( imath.V2f( 35.4000015, -22.1062508 ) )
__children["Dot"]["labelType"].setValue( 3 )
__children["Dot"]["label"].setValue( 'White' )
__children["Dot"]["in"].setInput( __children["DeleteChannels"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( -17.8657188, -21.2742195 ) )
__children["DeleteChannels"]["in"].setInput( __children["Shuffle"]["out"] )
__children["DeleteChannels"]["mode"].setValue( 1 )
__children["DeleteChannels"]["channels"].setValue( '[RGBA]' )
__children["DeleteChannels"]["__uiPosition"].setValue( imath.V2f( -2.99964762, -13.9421883 ) )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'layer = context.get( "myLayer", "" )\n\nparent["__out"]["p0"] = "{}.R".format( layer ) if layer else "R"\nparent["__out"]["p1"] = "{}.G".format( layer ) if layer else "G"\nparent["__out"]["p2"] = "{}.B".format( layer ) if layer else "B"\nparent["__out"]["p3"] = "{}.A".format( layer ) if layer else "A"' )


del __children

