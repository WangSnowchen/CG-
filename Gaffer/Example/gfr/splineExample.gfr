import Gaffer
import GafferArnold
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 57, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Ramp"] = Gaffer.Box( "Ramp" )
parent.addChild( __children["Ramp"] )
__children["Ramp"].addChild( GafferOSL.OSLShader( "ColorSpline" ) )
__children["Ramp"]["ColorSpline"].loadShader( "Pattern/ColorSpline" )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"].clearPoints()
__children["Ramp"]["ColorSpline"]["parameters"]["spline"].addChild( Gaffer.ValuePlug( "p0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"]["p0"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"]["p0"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"].addChild( Gaffer.ValuePlug( "p1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"]["p1"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"]["p1"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"].addChild( Gaffer.ValuePlug( "p2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"]["p2"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"]["p2"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"].addChild( Gaffer.ValuePlug( "p3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"]["p3"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"]["p3"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["ColorSpline"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"].addChild( GafferOSL.OSLCode( "OSLCode" ) )
__children["Ramp"]["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "mode", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["OSLCode"]["parameters"].addChild( Gaffer.V3fPlug( "start", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["Ramp"]["OSLCode"]["parameters"].addChild( Gaffer.V3fPlug( "end", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["Ramp"]["OSLCode"]["out"].addChild( Gaffer.FloatPlug( "x", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"].addChild( Gaffer.SplinefColor3fPlug( "spline", defaultValue = Gaffer.SplineDefinitionfColor3f( ( ( 0, imath.Color3f( 0, 0, 0 ) ), ( 1, imath.Color3f( 1, 1, 1 ) )), Gaffer.SplineDefinitionInterpolation( 1 )), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["spline"].clearPoints()
__children["Ramp"]["spline"].addChild( Gaffer.ValuePlug( "p0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["spline"]["p0"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["spline"]["p0"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["spline"].addChild( Gaffer.ValuePlug( "p1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["spline"]["p1"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["spline"]["p1"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["spline"].addChild( Gaffer.ValuePlug( "p2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["spline"]["p2"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["spline"]["p2"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["spline"].addChild( Gaffer.ValuePlug( "p3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["spline"]["p3"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"]["spline"]["p3"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["Ramp"]["BoxIn"].setup( Gaffer.IntPlug( "out", defaultValue = 0, ) )
__children["Ramp"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"].addChild( Gaffer.IntPlug( "mode", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"].addChild( Gaffer.BoxIn( "BoxIn1" ) )
__children["Ramp"]["BoxIn1"].setup( Gaffer.V3fPlug( "out", defaultValue = imath.V3f( 0, 0, 0 ), interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["Ramp"]["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"].addChild( Gaffer.V3fPlug( "start", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["Ramp"].addChild( Gaffer.BoxIn( "BoxIn2" ) )
__children["Ramp"]["BoxIn2"].setup( Gaffer.V3fPlug( "out", defaultValue = imath.V3f( 0, 0, 0 ), interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["Ramp"]["BoxIn2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"].addChild( Gaffer.V3fPlug( "end", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Point ) )
__children["Ramp"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Ramp"]["BoxOut"].setup( Gaffer.Color3fPlug( "in", defaultValue = imath.Color3f( 0, 0, 0 ), ) )
__children["Ramp"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Ramp"].addChild( Gaffer.Color3fPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InteractiveArnoldRender"] = GafferArnold.InteractiveArnoldRender( "InteractiveArnoldRender" )
parent.addChild( __children["InteractiveArnoldRender"] )
__children["InteractiveArnoldRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment"] = GafferScene.ShaderAssignment( "ShaderAssignment" )
parent.addChild( __children["ShaderAssignment"] )
__children["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frame"].setValue( 100.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 51003 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Ramp"]["ColorSpline"]["parameters"]["spline"].setInput( __children["Ramp"]["spline"] )
__children["Ramp"]["ColorSpline"]["parameters"]["x"].setInput( __children["Ramp"]["OSLCode"]["out"]["x"] )
__children["Ramp"]["ColorSpline"]["__uiPosition"].setValue( imath.V2f( 13.5, 0.400000006 ) )
__children["Ramp"]["OSLCode"]["parameters"]["mode"].setInput( __children["Ramp"]["BoxIn"]["out"] )
__children["Ramp"]["OSLCode"]["parameters"]["start"].setInput( __children["Ramp"]["BoxIn1"]["out"] )
__children["Ramp"]["OSLCode"]["parameters"]["end"].setInput( __children["Ramp"]["BoxIn2"]["out"] )
__children["Ramp"]["OSLCode"]["code"].setValue( 'if( mode == 0 )\n{\n    x = u;\n}\nelse if( mode ==1 )\n{\n\tx = v;\n}\nelse if( mode == 2 )\n{\n\tx = distance( point( u, v, 0 ), point( 0.5, 0.5, 0 ) ) * 2;\n}\nelse if( mode == 3 )\n{\n\tvector v1= point( u, v, 0 ) - start;\n\tvector v2 = end - start;\n\tx = dot( v2, v1 ) / dot( v2, v2 ) ;\n}' )
__children["Ramp"]["OSLCode"]["__uiPosition"].setValue( imath.V2f( 0.859131396, 0.400000095 ) )
__children["Ramp"]["__uiPosition"].setValue( imath.V2f( 3.34999847, 2.30659342 ) )
__children["Ramp"]["spline"]["interpolation"].setValue( 2 )
__children["Ramp"]["spline"]["p1"]["x"].setValue( 1.0 )
__children["Ramp"]["spline"]["p1"]["y"].setValue( imath.Color3f( 1, 1, 1 ) )
__children["Ramp"]["spline"]["p2"]["x"].setValue( 0.2622222304344177 )
__children["Ramp"]["spline"]["p2"]["y"].setValue( imath.Color3f( 0.0357000083, 0.145060569, 0.340000004 ) )
__children["Ramp"]["spline"]["p3"]["x"].setValue( 0.5111111402511597 )
__children["Ramp"]["spline"]["p3"]["y"].setValue( imath.Color3f( 0.779999971, 0.570451438, 0.0900000036 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"], 'description', '' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["interpolation"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["interpolation"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["x"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["x"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["y"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["y"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["y"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["y"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["y"]["r"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["y"]["r"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["y"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["y"]["g"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["y"]["g"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["y"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["y"]["b"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p0"]["y"]["b"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["x"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["x"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["y"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["y"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["y"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["y"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["y"]["r"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["y"]["r"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["y"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["y"]["g"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["y"]["g"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["y"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["y"]["b"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["spline"]["p1"]["y"]["b"], 'userDefault', None )
__children["Ramp"]["BoxIn"]["name"].setValue( 'mode' )
__children["Ramp"]["BoxIn"]["__in"].setInput( __children["Ramp"]["mode"] )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn"]["__in"], 'label', 'mode' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn"]["out"], 'noduleLayout:section', 'right' )
__children["Ramp"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( -14.5492954, 1.59932327 ) )
__children["Ramp"]["mode"].setValue( 2 )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'description', '' )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'preset:Horizontal', 0 )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'preset:Vertical', 1 )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'preset:Circle', 2 )
Gaffer.Metadata.registerValue( __children["Ramp"]["mode"], 'preset:Line', 3 )
__children["Ramp"]["BoxIn1"]["name"].setValue( 'start' )
__children["Ramp"]["BoxIn1"]["__in"].setInput( __children["Ramp"]["start"] )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"], 'label', 'start' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"]["x"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"]["x"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"]["x"], 'noduleLayout:label', 'start.x' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"]["y"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"]["y"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"]["y"], 'noduleLayout:label', 'start.y' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"]["z"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"]["z"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["__in"]["z"], 'noduleLayout:label', 'start.z' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn1"]["out"], 'noduleLayout:section', 'right' )
__children["Ramp"]["BoxIn1"]["__uiPosition"].setValue( imath.V2f( -14.3600864, -4.90067673 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"], 'description', '' )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"]["x"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"]["x"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"]["x"], 'noduleLayout:label', 'start.x' )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"]["y"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"]["y"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"]["y"], 'noduleLayout:label', 'start.y' )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"]["z"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"]["z"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["start"]["z"], 'noduleLayout:label', 'start.z' )
__children["Ramp"]["BoxIn2"]["name"].setValue( 'end' )
__children["Ramp"]["BoxIn2"]["__in"].setInput( __children["Ramp"]["end"] )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"], 'label', 'end' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"]["x"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"]["x"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"]["x"], 'noduleLayout:label', 'end.x' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"]["y"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"]["y"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"]["y"], 'noduleLayout:label', 'end.y' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"]["z"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"]["z"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["__in"]["z"], 'noduleLayout:label', 'end.z' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxIn2"]["out"], 'noduleLayout:section', 'right' )
__children["Ramp"]["BoxIn2"]["__uiPosition"].setValue( imath.V2f( -14.0229292, -11.4006767 ) )
__children["Ramp"]["end"].setValue( imath.V3f( 1, 1, 0 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"], 'description', '' )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"]["x"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"]["x"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"]["x"], 'noduleLayout:label', 'end.x' )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"]["y"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"]["y"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"]["y"], 'noduleLayout:label', 'end.y' )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"]["z"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"]["z"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["end"]["z"], 'noduleLayout:label', 'end.z' )
__children["Ramp"]["BoxOut"]["in"].setInput( __children["Ramp"]["ColorSpline"]["out"]["c"] )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxOut"]["in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxOut"]["__out"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxOut"]["__out"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxOut"]["__out"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxOut"]["__out"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxOut"]["__out"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["BoxOut"]["__out"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
__children["Ramp"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 26.0296955, 0.399316192 ) )
__children["Ramp"]["out"].setInput( __children["Ramp"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Ramp"]["out"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["out"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["Ramp"]["out"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Ramp"]["out"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Ramp"]["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Ramp"]["out"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["out"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Ramp"]["out"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
__children["InteractiveArnoldRender"]["in"].setInput( __children["Outputs"]["out"] )
__children["InteractiveArnoldRender"]["__uiPosition"].setValue( imath.V2f( 21.7645473, -15.8040237 ) )
__children["Outputs"]["in"].setInput( __children["ShaderAssignment"]["out"] )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Beauty' )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( 21.7645473, -7.63996172 ) )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/${script:name}' )
__children["Catalogue"]["__mapping"].setValue( IECore.CompoundData({'Image':IECore.IntData( 0 )}) )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( 39.9010429, -16.0865154 ) )
__children["Plane"]["transform"]["translate"].setValue( imath.V3f( 0, 0, -1 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( 21.7645473, 16.0524559 ) )
__children["ShaderAssignment"]["in"].setInput( __children["Plane"]["out"] )
__children["ShaderAssignment"]["shader"].setInput( __children["Ramp"]["out"] )
__children["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( 21.7645473, 2.90659356 ) )


del __children

